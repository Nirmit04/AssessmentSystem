{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/content-creator/content-creator.component.css","webpack:///./src/app/content-creator/content-creator.component.html","webpack:///./src/app/content-creator/content-creator.component.ts","webpack:///./src/app/content-creator/create-questions/create-questions.component.css","webpack:///./src/app/content-creator/create-questions/create-questions.component.html","webpack:///./src/app/content-creator/create-questions/create-questions.component.ts","webpack:///./src/app/content-creator/dashboard/dashboard.component.css","webpack:///./src/app/content-creator/dashboard/dashboard.component.html","webpack:///./src/app/content-creator/dashboard/dashboard.component.ts","webpack:///./src/app/content-creator/retrieve-question-bank/retrieve-question-bank.component.css","webpack:///./src/app/content-creator/retrieve-question-bank/retrieve-question-bank.component.html","webpack:///./src/app/content-creator/retrieve-question-bank/retrieve-question-bank.component.ts","webpack:///./src/app/content-creator/retrieve-quiz/create-quiz/create-quiz.component.css","webpack:///./src/app/content-creator/retrieve-quiz/create-quiz/create-quiz.component.html","webpack:///./src/app/content-creator/retrieve-quiz/create-quiz/create-quiz.component.ts","webpack:///./src/app/content-creator/retrieve-quiz/retrieve-quiz.component.css","webpack:///./src/app/content-creator/retrieve-quiz/retrieve-quiz.component.html","webpack:///./src/app/content-creator/retrieve-quiz/retrieve-quiz.component.ts","webpack:///./src/app/content-creator/shared/content-creator-service.service.ts","webpack:///./src/app/content-creator/tag/createtag/createtag.component.css","webpack:///./src/app/content-creator/tag/createtag/createtag.component.html","webpack:///./src/app/content-creator/tag/createtag/createtag.component.ts","webpack:///./src/app/content-creator/tag/retrievetag/tag.component.css","webpack:///./src/app/content-creator/tag/retrievetag/tag.component.html","webpack:///./src/app/content-creator/tag/retrievetag/tag.component.ts","webpack:///./src/app/content-creator/update-question/update-question.component.css","webpack:///./src/app/content-creator/update-question/update-question.component.html","webpack:///./src/app/content-creator/update-question/update-question.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAE8B;AAC/B;AACG;AACV;AAG/C,IAAM,MAAM,GAAW;IACtB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAE,SAAS,EAAE,MAAM,EAAE;IAC1D,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2DAAY,EAAE;IAC7C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,iGAAkB,EAAE;IAClD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;CAC5C,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACT,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACvB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrB7B,+DAA+D,2H;;;;;;;;;;;ACA/D,oF;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IAGE;QAFA,UAAK,GAAG,QAAQ,CAAC;IAED,CAAC;IAHN,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;;OACW,YAAY,CAIxB;IAAD,mBAAC;CAAA;AAJwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACgE;AAC1B;AACrC;AACG;AACW;AACA;AACT;AACuC;AACD;AACqC;AACnB;AAC1B;AACjB;AACH;AACH;AACK;AACJ;AACE;AACE;AACO;AACuB;AACV;AACiB;AACQ;AACF;AAGtG,IAAI,MAAM,GAAG,IAAI,wEAAiB,CAAC;IACjC;QACE,EAAE,EAAE,0EAAmB,CAAC,WAAW;QACnC,QAAQ,EAAE,IAAI,0EAAmB,CAAC,0EAA0E,CAAC;KAC9G;CACF,CAAC,CAAC;AAEI,SAAS,aAAa;IAC3B,OAAO,MAAM,CAAC;AAChB,CAAC;AAwCD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qHAAwB;gBACxB,uIAA6B;gBAC7B,mGAAuB;gBACvB,kGAAkB;gBAClB,sEAAc;gBACd,mEAAa;gBACb,sGAAkB;gBAClB,4FAAY;gBACZ,6GAAqB;gBACrB,qHAAmB;gBACnB,mHAAuB;aAExB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;gBAChB,4FAAuB;gBACvB,uDAAY,CAAC,OAAO,EAAE;gBACtB,wEAAiB;gBACjB,yEAAe;gBACf,yEAAe;gBACf,gFAAkB;gBAClB,qEAAa;gBACb,uEAAc;aACf;YACD,SAAS,EAAE,CAAC,qHAA4B,EAAE;oBACxC,OAAO,EAAE,wEAAiB;oBAC1B,UAAU,EAAE,aAAa;iBAE1B,CAAC;YACF,SAAS,EAAE,CAAC,2DAAY,CAAC;YACzB,eAAe,EAAE,CAAC,sGAAkB,CAAC;SACtC,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC9EtB,+DAA+D,+J;;;;;;;;;;;ACA/D,2C;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,0CAAQ,GAAR;IACA,CAAC;IALU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,iIAA+C;;SAEhD,CAAC;;OACW,uBAAuB,CAOnC;IAAD,8BAAC;CAAA;AAPmC;;;;;;;;;;;;ACPpC,+DAA+D,uL;;;;;;;;;;;ACA/D,yDAAyD,82GAA82G,mBAAmB,KAAK,cAAc,w+B;;;;;;;;;;;;;;;;;;;ACAn5G;AAEmD;AAClE;AAQ3C;IAGE,kCAAmB,OAAqC,EAAS,MAAqB;QAAnE,YAAO,GAAP,OAAO,CAA8B;QAAS,WAAM,GAAN,MAAM,CAAe;QADtF,eAAU,GAAG,EAAE,CAAC;IAEZ,CAAC;IACL,2CAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC3C,KAAI,CAAC,QAAQ,GAAG,GAAgB,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAS,GAAT,UAAU,IAAa;QACrB,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG;YACtB,UAAU,EAAE,IAAI;YAChB,iBAAiB,EAAE,EAAE;YACrB,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,IAAI;YACX,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;SACd;IACH,CAAC;IACD,2CAAQ,GAAR,UAAS,IAAY;QAArB,iBAKC;QAJC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YACjD,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;YAC7C,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QAAA,CAAC;IACN,CAAC;IAnCU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,oJAAgD;;SAEjD,CAAC;+EAI4B,2HAA4B,EAAiB,wDAAa;OAH3E,wBAAwB,CAoCpC;IAAD,+BAAC;CAAA;AApCoC;;;;;;;;;;;;ACXrC,+DAA+D,mK;;;;;;;;;;;ACA/D,k0I;;;;;;;;;;;;;;;;;;;ACAkD;AAIT;AACW;AAQpD;IACC,4BAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAM,CAAC;IAE3E,qCAAQ,GAAR;QAAA,iBAYC;QAXA,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE;YACxC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACjC;QACD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,IAAI;YACzC,IAAI,IAAI,IAAI,IAAI,EAAE;gBACjB,qBAAqB;aACrB;iBAAM;gBACN,YAAY,CAAC,KAAK,EAAE,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aACjC;QACF,CAAC,CAAC;IACH,CAAC;IACD,iCAAI,GAAJ,UAAK,IAAI;QACR,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;IACD,mCAAM,GAAN;QACC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC5B,CAAC;IAtBW,kBAAkB;QAL9B,+DAAS,CAAC;YACV,QAAQ,EAAE,eAAe;YACzB,+HAAyC;;SAEzC,CAAC;+EAE2B,sDAAM,EAAuB,iEAAW;OADxD,kBAAkB,CA8B9B;IAAD,yBAAC;CAAA;AA9B8B;;;;;;;;;;;;ACb/B,wBAAwB,uBAAuB,GAAG,6CAA6C,uZ;;;;;;;;;;;ACA/F,yXAAyX,WAAW,mEAAmE,KAAK,mCAAmC,wBAAwB,mCAAmC,kBAAkB,mCAAmC,iBAAiB,2Y;;;;;;;;;;;;;;;;;;;;;ACA9jB;AAIuC;AAC9C;AACyC;AACG;AAQvF;IAKC,uCAAoB,OAAqC,EAChD,MAAqB,EACrB,MAAiB;QAFN,YAAO,GAAP,OAAO,CAA8B;QAChD,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAW;QAL1B,eAAU,GAAG,EAAE,CAAC;QAChB,oBAAe,GAAG,EAAE,CAAC;IAIS,CAAC;IAE/B,gDAAQ,GAAR;QACC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,qDAAa,GAAb,UAAc,GAAW;QAAzB,iBAKC;QAJA,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACnD,KAAI,CAAC,YAAY,GAAG,IAAkB,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;QAChC,CAAC,CAAC;IACH,CAAC;IACD,kDAAU,GAAV,UAAW,GAAG;QAAd,iBAKC;QAJA,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,GAAQ;YAC/C,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,EAAE,kBAAkB,CAAC,CAAC;YAChE,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACJ,CAAC;IACD,oDAAY,GAAZ,UAAa,MAAc,EAAE,UAAkB;QAC9C,IAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE,YAAY,CAAC,CAAC;IACzD,CAAC;IAhCW,6BAA6B;QALzC,+DAAS,CAAC;YACV,QAAQ,EAAE,4BAA4B;YACtC,sKAAsD;;SAEtD,CAAC;+EAM4B,oGAA4B;YACxC,wDAAa;YACb,kEAAS;OAPd,6BAA6B,CAiCzC;IAAD,oCAAC;CAAA;AAjCyC;;;;;;;;;;;;ACf1C,wBAAwB,uBAAuB,GAAG,aAAa,yBAAyB,0BAA0B,GAAG,6CAA6C,2gB;;;;;;;;;;;ACAlK,yDAAyD,+pCAA+pC,aAAa,mBAAmB,KAAK,cAAc,srBAAsrB,gGAAgG,eAAe,8GAA8G,qBAAqB,2N;;;;;;;;;;;;;;;;;;ACAjoE;AAE0C;AAS5F;IAKE,6BAAoB,OAAqC;QAArC,YAAO,GAAP,OAAO,CAA8B;QAFzD,QAAG,GAAY,IAAI,CAAC;QACpB,UAAK,GAAW,CAAC,CAAC;IAC2C,CAAC;IAC9D,sCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,cAAI;YAC5C,KAAI,CAAC,QAAQ,GAAG,IAAiB,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uCAAS,GAAT,UAAU,IAAa;QACrB,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;aACI;YACH,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG;gBACtB,MAAM,EAAE,IAAI;gBACZ,UAAU,EAAE,EAAE;gBACd,cAAc,EAAE,IAAI;gBACpB,UAAU,EAAE,IAAI;gBAChB,OAAO,EAAE,EAAE;gBACX,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,EAAE;gBACb,GAAG,EAAE,IAAI;gBACT,SAAS,EAAE,IAAI;aAChB;YACD,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,GAAG,KAAK,EAAlB,CAAkB,CAAC,CAAC;aAC7C;SACF;IACH,CAAC;IACD,sCAAQ,GAAR,UAAS,IAAY;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAU,IAAI,iBAAU,CAAC,QAAQ,EAAnB,CAAmB,CAAC,CAAC,GAAG,CAAC,oBAAU,IAAI,iBAAU,CAAC,UAAU,EAArB,CAAqB,CAAC,CAAC;QACnH,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,mEAAmE;QACnE,iDAAiD;QACjD,OAAO;IACT,CAAC;IACD,0CAAY,GAAZ,UAAa,IAAY;QAAzB,iBAOC;QANC,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACpE,IAAI,CAAC,OAAO,CAAC,aAAG,IAAI,UAAG,CAAC,QAAQ,GAAG,KAAK,EAApB,CAAoB,CAAC,CAAC;YAC1C,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;QAE9B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sCAAQ,GAAR;QACE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;IAClB,CAAC;IACD,qDAAuB,GAAvB,UAAwB,KAAK;QAC3B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC;IACnE,CAAC;IAvDU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,mJAA2C;;SAE5C,CAAC;+EAM6B,oGAA4B;OAL9C,mBAAmB,CAwD/B;IAAD,0BAAC;CAAA;AAxD+B;;;;;;;;;;;;ACXhC,wBAAwB,yBAAyB,uBAAuB,KAAK,6CAA6C,+Z;;;;;;;;;;;ACA1H,kRAAkR,uhCAAuhC,gFAAgF,KAAK,mCAAmC,eAAe,mCAAmC,iBAAiB,mCAAmC,cAAc,mCAAmC,qBAAqB,mCAAmC,iBAAiB,qU;;;;;;;;;;;;;;;;;;;;;;ACA/kD;AAEuC;AAChD;AAC2C;AACzC;AAE+B;AAO1E;IAKC,+BAAoB,OAAqC,EAChD,MAAc,EACd,MAAiB,EACjB,MAAqB;QAHV,YAAO,GAAP,OAAO,CAA8B;QAChD,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAW;QACjB,WAAM,GAAN,MAAM,CAAe;QAN9B,eAAU,GAAG,EAAE,CAAC;QAChB,oBAAe,GAAG,EAAE,CAAC;QACrB,UAAK,GAAG,CAAC,CAAC;IAIwB,CAAC;IAEnC,wCAAQ,GAAR;QACC,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjB,CAAC;IACD,wCAAQ,GAAR;QAAA,iBAIE;QAHD,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,GAAQ;YAC5C,KAAI,CAAC,QAAQ,GAAG,GAAkB,CAAC;QACpC,CAAC,CAAC,CAAC;IACH,CAAC;IACD,sCAAM,GAAN,UAAO,IAAe;QACtB,OAAO,CACN,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC;YACtE,gFAAgF;eAC7E,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CACjF,CAAC;IACH,CAAC;IAED,6CAAa,GAAb,UAAc,KAAU;QACvB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACnC,CAAC;IACD,wCAAQ,GAAR;QAAA,iBASC;QARA,IAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE,YAAY,CAAC,CAAC;QACpE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACpC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAE,IAAI,CAAC;QACrC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,wCAAQ,GAAR,UAAS,EAAU;QAAnB,iBAQC;QAPA,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,OAAO,CAAC,4CAA4C,CAAC,EAAE;YAC1D,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,GAAQ;gBAC9C,KAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,EAAE,kBAAkB,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;SACH;IACF,CAAC;IAjDW,qBAAqB;QALjC,+DAAS,CAAC;YACV,QAAQ,EAAE,SAAS;YACnB,2IAA6C;;SAE7C,CAAC;+EAM4B,oGAA4B;YACxC,sDAAM;YACN,kEAAS;YACT,wDAAa;OARlB,qBAAqB,CA+DjC;IAAD,4BAAC;CAAA;AA/DiC;;;;;;;;;;;;;;;;;;;;ACdS;AACO;AAES;AAM3D;IAMC,sCAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,+BAA+B,CAAC;IAEF,CAAC;IACzC,mDAAY,GAAZ,UAAa,QAAkB;QAC9B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,yBAAyB,EAAE,QAAQ,CAAC,CAAC;IAC3E,CAAC;IACD,qDAAc,GAAd,UAAe,QAAkB;QAChC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,GAAG,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACzE,CAAC;IACD,uDAAgB,GAAhB;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,CAAC;IAC5D,CAAC;IACD,oDAAa,GAAb,UAAc,GAAW;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,6BAA6B,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;IAClG,CAAC;IACD,iDAAU,GAAV,UAAW,GAAG;QACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,GAAG,GAAG,CAAC,CAAC;IACnE,CAAC;IAED,8CAAO,GAAP;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,sBAAsB,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3F,CAAC;IACD,+CAAQ,GAAR,UAAS,OAAiB;QACzB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,OAAO,CAAC,SAAS,KAAK,IAAI,EAAE;YAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,uBAAuB,EAAE,OAAO,CAAC,CAAC;SACvE;aAAM;YACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,GAAG,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SAClF;IAEF,CAAC;IACD,iDAAU,GAAV,UAAW,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,wEAAW,CAAC,MAAM,GAAG,cAAc,GAAG,EAAE,CAAC,CAAC;IACnE,CAAC;IACD,iDAAU,GAAV;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;IACpF,CAAC;IACD,iDAAU,GAAV,UAAW,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,GAAG,EAAE,CAAC,CAAC;IAC9D,CAAC;IAED,+DAAwB,GAAxB,UAAyB,IAAS;QACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IAnDW,4BAA4B;QAHxC,gEAAU,CAAC;YACX,UAAU,EAAE,MAAM;SAClB,CAAC;+EAOyB,+DAAU;OANxB,4BAA4B,CAoDxC;IAAD,mCAAC;CAAA;AApDwC;;;;;;;;;;;;ACTzC,iEAAiE,2K;;;;;;;;;;;ACAjE,yDAAyD,iEAAiE,QAAQ,0gD;;;;;;;;;;;;;;;;;;;;ACAxE;AACkC;AAGjD;AAC8B;AAQzE;IAIC,4BACiC,IAAI,EAC7B,SAA2C,EAC1C,OAAqC,EACrC,MAAqB;QAHG,SAAI,GAAJ,IAAI;QAC7B,cAAS,GAAT,SAAS,CAAkC;QAC1C,YAAO,GAAP,OAAO,CAA8B;QACrC,WAAM,GAAN,MAAM,CAAe;QAN9B,WAAM,GAAG,EAAE,CAAC;QACZ,WAAM,GAAW,EAAE,CAAC;IAKc,CAAC;IAEnC,qCAAQ,GAAR;QACC,qCAAqC;QACrC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YACvB,qCAAqC;YACrC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACvB,IAAI,CAAC,SAAS,EAAE,CAAC;SACjB;aACI;YACJ,qCAAqC;YACrC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;SAClC;IACF,CAAC;IACD,sCAAS,GAAT,UAAU,IAAa;QACtB,IAAI,IAAI,IAAI,IAAI,EAAE;YACjB,IAAI,CAAC,SAAS,EAAE,CAAC;SACjB;QAED,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG;YACtB,SAAS,EAAE,IAAI;YACf,IAAI,EAAE,EAAE;YACR,UAAU,EAAE,EAAE;SACd,CAAC;IACH,CAAC;IACD,qCAAQ,GAAR,UAAS,IAAY;QAArB,iBAMC;QALA,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9C,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;YAC7C,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;QAAA,CAAC;QACJ,yBAAyB;IAC1B,CAAC;IA1CW,kBAAkB;QAL9B,+DAAS,CAAC;YACV,QAAQ,EAAE,eAAe;YACzB,mIAAyC;;SAEzC,CAAC;QAMC,6GAAM,CAAC,wEAAe,CAAC;uFACN,qEAAY;YACb,oGAA4B;YAC7B,wDAAa;OARlB,kBAAkB,CA2C9B;IAAD,yBAAC;CAAA;AA3C8B;;;;;;;;;;;;ACb/B,yBAAyB,gBAAgB,qBAAqB,GAAG,oBAAoB,qBAAqB,sBAAsB,GAAG,MAAM,uBAAuB,GAAG,wBAAwB,kCAAkC,GAAG,+CAA+C,urB;;;;;;;;;;;ACA/Q,4bAA4b,WAAW,mEAAmE,KAAK,mCAAmC,UAAU,mCAAmC,gBAAgB,+M;;;;;;;;;;;;;;;;;;;;;;ACA7jB;AAE0C;AACnD;AAC2C;AACzC;AAC2B;AAOtE;IAEC,sBAAoB,OAAqC,EAChD,MAAc,EACd,MAAiB,EACjB,MAAqB;QAHV,YAAO,GAAP,OAAO,CAA8B;QAChD,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAW;QACjB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEnC,+BAAQ,GAAR;QACC,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjB,CAAC;IACD,+BAAQ,GAAR;QAAA,iBAKC;QAJA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,UAAC,GAAQ;YACzC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,OAAO,GAAG,GAAiB,CAAC;QAClC,CAAC,CAAC,CAAC;IACJ,CAAC;IACD,+BAAQ,GAAR;QAAA,iBAUC;QATA,IAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iFAAkB,EAAE,YAAY,CAAC,CAAC;QACnE,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACvC,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;YACtC,KAAI,CAAC,QAAQ,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACJ,CAAC;IACD,yBAAyB;IACzB,oBAAoB;IACpB,iEAAiE;IACjE,0DAA0D;IAC1D,sBAAsB;IACtB,sEAAsE;IACtE,QAAQ;IACR,KAAK;IACL,IAAI;IACJ,6BAAM,GAAN,UAAO,EAAU;QAChB,mBAAmB;QACnB,IAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iFAAkB,EAAE,YAAY,CAAC,CAAC;IACpE,CAAC;IA7CW,YAAY;QALxB,+DAAS,CAAC;YACV,QAAQ,EAAE,SAAS;YACnB,yHAAmC;;SAEnC,CAAC;+EAG4B,oGAA4B;YACxC,sDAAM;YACN,kEAAS;YACT,wDAAa;OALlB,YAAY,CA8CxB;IAAD,mBAAC;CAAA;AA9CwB;;;;;;;;;;;;ACbzB,+DAA+D,mL;;;;;;;;;;;ACA/D,yDAAyD,w/GAAw/G,mBAAmB,KAAK,cAAc,yoC;;;;;;;;;;;;;;;;;;;;ACA7hH;AAEmD;AAClE;AAE8B;AAOzE;IAGE,iCAA4C,IAAI,EACjC,SAAiD,EACjD,OAAqC,EACrC,MAAqB;QAHQ,SAAI,GAAJ,IAAI;QACjC,cAAS,GAAT,SAAS,CAAwC;QACjD,YAAO,GAAP,OAAO,CAA8B;QACrC,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEzC,0CAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC3C,KAAI,CAAC,QAAQ,GAAG,GAAgB,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAS,GAAT,UAAU,IAAa;QACrB,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QACD,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG;YACtB,UAAU,EAAE,IAAI;YAChB,iBAAiB,EAAE,EAAE;YACrB,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,IAAI;YACX,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;SACd;IACH,CAAC;IAED,0CAAQ,GAAR,UAAS,IAAY;QAArB,iBAKC;QAJC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YACnD,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;YAC5C,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QAAA,CAAC;IACN,CAAC;IArCU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,iJAA+C;;SAEhD,CAAC;QAIa,6GAAM,CAAC,wEAAe,CAAC;uFACT,qEAAY;YACf,2HAA4B;YAC7B,wDAAa;OANzB,uBAAuB,CAuCnC;IAAD,8BAAC;CAAA;AAvCmC;;;;;;;;;;;;ACZpC,+DAA+D,mI;;;;;;;;;;;ACA/D,mB;;;;;;;;;;;;;;;;;;;ACAkD;AACT;AACsB;AAO/D;IAEE,uBAAoB,MAAc,EACxB,IAAgB;QADN,WAAM,GAAN,MAAM,CAAQ;QACxB,SAAI,GAAJ,IAAI,CAAY;QAC1B,YAAO,GAAG,+BAA+B,CAAC;QAC1C,SAAI,GAAG,EAAE,CAAC;QACV,QAAG,GAAG,EAAE,CAAC;IAHqB,CAAC;IAI/B,gCAAQ,GAAR;QAAA,iBAkCC;QAjCC,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;YACtC,IAAM,IAAI,GAAG;gBACX,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC;gBAC5C,QAAQ,EAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC;gBAC1C,KAAK,EAAE,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;gBACpC,MAAM,EAAE,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACtC,QAAQ,EAAE,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC;aACrC,CAAC;YACF,qBAAqB;YACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,GAAQ;gBACtE,oBAAoB;gBACpB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,GAAG,uBAAuB,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;oBACxG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAClB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;oBACnB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;oBACjC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC;oBACtB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;oBACvB,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,KAAI,CAAC,GAAG,CAAC,CAAC;oBACtC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,KAAI,CAAC,IAAI,CAAC,CAAC;oBACxC,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;gBACjC,CAAC,CAAC;gBACF,wBAAwB;gBACxB,oBAAoB;gBACpB,4CAA4C;gBAC5C,2CAA2C;gBAC3C,kCAAkC;YACpC,CAAC,CAAC,CAAC;SAGJ;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SAClC;IACH,CAAC;IACD,sCAAc,GAAd,UAAe,IAAY;QACzB,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;SACpC;IACH,CAAC;IA/CU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAG4B,sDAAM;YAClB,+DAAU;OAHf,aAAa,CAiDzB;IAAD,oBAAC;CAAA;AAjDyB;;;;;;;;;;;;ACT1B,+DAA+D,mI;;;;;;;;;;;ACA/D,6S;;;;;;;;;;;;;;;;;;;ACAkD;AACE;AAEQ;AACnB;AAOzC;IAEE,wBAAoB,WAAwB,EAClC,MAAc;QADJ,gBAAW,GAAX,WAAW,CAAa;QAClC,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE7B,iCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,UAAC,IAAI;YACxC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,IAAI,IAAI,IAAI,EAAE;gBAChB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;gBACvB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACjD,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/C,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACvD,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACrD,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,KAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACzC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACnD,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;iBAAM;gBACL,YAAY,CAAC,KAAK,EAAE,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yCAAgB,GAAhB;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,yEAAmB,CAAC,WAAW,CAAC,CAAC;IAC3D,CAAC;IACD,gCAAO,GAAP;QACE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IA7BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAqC;;SAEtC,CAAC;+EAGiC,iEAAW;YAC1B,sDAAM;OAHb,cAAc,CA8B1B;IAAD,qBAAC;CAAA;AA9B0B;;;;;;;;;;;;;ACX3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,+BAA+B;CACxC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RetrieveQuestionBankComponent } from './content-creator/retrieve-question-bank/retrieve-question-bank.component';\nimport { DashboardComponent } from './content-creator/dashboard/dashboard.component';\nimport { HomeComponent } from \"./home/home.component\";\nimport { LoginComponent } from './login/login.component';\nimport { AppComponent } from './app.component';\n\n\nconst routes: Routes = [\n\t{ path: 'home', component: HomeComponent },\n\t{ path: '', component: LoginComponent, pathMatch: 'full' },\n\t{ path: 'app-root', component: AppComponent },\n\t{ path: 'cc-dash', component: DashboardComponent },\n\t{ path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- <app-login></app-login> -->\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'WebApp';\n\n  constructor() { }\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CreateQuestionsComponent } from './content-creator/create-questions/create-questions.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContentCreatorComponent } from './content-creator/content-creator.component';\nimport { DashboardComponent } from './content-creator/dashboard/dashboard.component';\nimport { RetrieveQuestionBankComponent } from './content-creator/retrieve-question-bank/retrieve-question-bank.component';\nimport { ContentCreatorServiceService } from './content-creator/shared/content-creator-service.service'\nimport { SocialLoginModule, AuthServiceConfig } from \"angularx-social-login\";\nimport { GoogleLoginProvider } from \"angularx-social-login\";\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CreatetagComponent } from './content-creator/tag/createtag/createtag.component';\nimport { TagComponent } from './content-creator/tag/retrievetag/tag.component';\nimport { RetrieveQuizComponent } from './content-creator/retrieve-quiz/retrieve-quiz.component';\nimport { CreateQuizComponent } from './content-creator/retrieve-quiz/create-quiz/create-quiz.component';\nimport { UpdateQuestionComponent } from './content-creator/update-question/update-question.component';\n\n\nlet config = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider(\"819840688710-ljvg9sqe86d08r2hlgv6e9s74i3jmiq0.apps.googleusercontent.com\")\n  }\n]);\n\nexport function provideConfig() {\n  return config;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateQuestionsComponent,\n    RetrieveQuestionBankComponent,\n    ContentCreatorComponent,\n    DashboardComponent,\n    LoginComponent,\n    HomeComponent,\n    CreatetagComponent,\n    TagComponent,\n    RetrieveQuizComponent,\n    CreateQuizComponent,\n    UpdateQuestionComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    SocialLoginModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatTableModule\n  ],\n  providers: [ContentCreatorServiceService, {\n    provide: AuthServiceConfig,\n    useFactory: provideConfig,\n\n  }],\n  bootstrap: [AppComponent],\n  entryComponents: [CreatetagComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29udGVudC1jcmVhdG9yL2NvbnRlbnQtY3JlYXRvci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>this is working</h1>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content-creator',\n  templateUrl: './content-creator.component.html',\n  styleUrls: ['./content-creator.component.css']\n})\nexport class ContentCreatorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29udGVudC1jcmVhdG9yL2NyZWF0ZS1xdWVzdGlvbnMvY3JlYXRlLXF1ZXN0aW9ucy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card\\\" style=\\\"width: 80%;\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">Add Questions</h5>\\n    <form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\" autocomplete=\\\"off\\\">\\n      <input type=\\\"hidden\\\" name=\\\"CreatedBy\\\" #CreatedBy=\\\"ngModel\\\" [(ngModel)]=\\\"CCreatedBy\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Question</label>\\n        <textarea class=\\\"form-control\\\" name=\\\"QuestionStatement\\\" #QuestionStatement=\\\"ngModel\\\"\\n          [(ngModel)]=\\\"service.formData.QuestionStatement\\\" rows=\\\"3\\\" required></textarea>\\n        <div class=\\\"validation-error\\\" *ngIf=\\\"QuestionStatement.invalid && QuestionStatement.touched\\\">This field is\\n          required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Option 1</label>\\n          <input required type=\\\"text\\\" name=\\\"Option1\\\" #Option1=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option1\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Option1.invalid && Option1.touched\\\">This field is required.</div>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Option 2</label>\\n          <input required type=\\\"text\\\" name=\\\"Option2\\\" #Option2=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option2\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Option2.invalid && Option2.touched\\\">This field is required.</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Option 3</label>\\n          <input required type=\\\"text\\\" name=\\\"Option3\\\" #Option3=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option3\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Option3.invalid && Option3.touched\\\">This field is required.</div>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Option 4</label>\\n          <input required type=\\\"text\\\" name=\\\"Option4\\\" #Option4=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option4\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Option4.invalid && Option4.touched\\\">This field is required.</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Correct Option</label>\\n          <input required type=\\\"text\\\" name=\\\"Answer\\\" #Answer=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Answer\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Answer.invalid && Answer.touched\\\">This field is required.\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Marks</label>\\n          <input required type=\\\"text\\\" name=\\\"Marks\\\" #Marks=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Marks\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Marks.invalid && Marks.touched\\\">This field is required.</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Select Subject</label>\\n          <select name=\\\"SubjectId\\\" required #SubjectId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.SubjectId\\\"\\n            class=\\\"form-control\\\">\\n            <option value=\\\"\\\">Choose</option>\\n            <option *ngFor=\\\"let Subject of Subjects\\\" value=\\\"{{Subject.SubjectId}}\\\">{{Subject.Name}}</option>\\n          </select>\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"SubjectId.invalid && SubjectId.touched\\\">This field is required.</div>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Select Difficulty-Level</label>\\n          <select name=\\\"Difficulty\\\" required #Difficulty=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Difficulty\\\"\\n            class=\\\"form-control\\\">\\n            <option value=\\\"\\\">Choose</option>\\n            <option value=\\\"Beginner\\\">Easy</option>\\n            <option value=\\\"Intermediate\\\">Medium</option>\\n            <option value=\\\"Advanced\\\">Hard</option>\\n          </select>\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Difficulty.invalid && Difficulty.touched\\\">This field is required.</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary btn-block\\\">Submit</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ContentCreatorServiceService } from 'src/app/content-creator/shared/content-creator-service.service'\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'src/app/content-creator/shared/subject.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n@Component({\n  selector: 'app-create-questions',\n  templateUrl: './create-questions.component.html',\n  styleUrls: ['./create-questions.component.css']\n})\nexport class CreateQuestionsComponent implements OnInit {\n  public Subjects: Subject[];\n  CCreatedBy = \"\";\n  constructor(public service: ContentCreatorServiceService, public toastr: ToastrService,\n  ) { }\n  ngOnInit() {\n    this.resetForm();\n    this.CCreatedBy = localStorage.getItem('uid');\n    this.service.retrieveSubjects().subscribe(res => {\n      this.Subjects = res as Subject[];\n    });\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n    this.service.formData = {\n      QuestionId: null,\n      QuestionStatement: \"\",\n      Option1: \"\",\n      Option2: \"\",\n      Option3: \"\",\n      Option4: \"\",\n      Answer: null,\n      Marks: null,\n      Difficulty: \"\",\n      SubjectId: \"\",\n    }\n  }\n  onSubmit(form: NgForm) {\n    this.service.postQuestion(form.value).subscribe(res => {\n      this.toastr.success('Inserted successfully');\n      this.resetForm(form);\n    });;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29udGVudC1jcmVhdG9yL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<body class=\\\"\\\">\\n  <!--sidebar-->\\n  <div class=\\\"wrapper\\\">\\n    <div class=\\\"sidebar\\\">\\n      <div class=\\\"sidebar-wrapper\\\">\\n        <div class=\\\"logo\\\">\\n          <a class=\\\"simple-text logo-mini\\\">\\n            CC\\n          </a>\\n          <a class=\\\"simple-text logo-normal\\\">\\n            Content Creator\\n          </a>\\n        </div>\\n        <ul class=\\\"nav\\\">\\n          <li class=\\\"\\\">\\n            <a (click)=\\\"Open(1)\\\">\\n              <i class=\\\"tim-icons icon-chart-pie-36\\\"></i>\\n              <p>Dashboard</p>\\n            </a>\\n          </li>\\n\\n          <li>\\n            <a (click)=\\\"Open(2)\\\">\\n              <i class=\\\"tim-icons icon-single-02\\\"></i>\\n              <p>Create Question</p>\\n            </a>\\n          </li>\\n          <li>\\n            <a (click)=\\\"Open(3)\\\">\\n              <i class=\\\"tim-icons icon-puzzle-10\\\"></i>\\n              <p>Create Quiz</p>\\n            </a>\\n          </li>\\n          <li>\\n            <a (click)=\\\"Open(4)\\\">\\n              <i class=\\\"tim-icons icon-puzzle-10\\\"></i>\\n              <p>Create / Edit Tag</p>\\n            </a>\\n          </li>\\n          <li>\\n            <a (click)=\\\"Open(5)\\\">\\n              <i class=\\\"tim-icons icon-puzzle-10\\\"></i>\\n              <p>Questions Created</p>\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n    <div class=\\\"main-panel\\\">\\n      <!-- Navbar -->\\n      <nav class=\\\"navbar navbar-expand-lg navbar-absolute navbar-transparent\\\">\\n        <div class=\\\"container-fluid\\\">\\n          <div class=\\\"navbar-wrapper\\\">\\n            <div class=\\\"navbar-toggle d-inline\\\">\\n              <button type=\\\"button\\\" class=\\\"navbar-toggler\\\">\\n                <span class=\\\"navbar-toggler-bar bar1\\\"></span>\\n                <span class=\\\"navbar-toggler-bar bar2\\\"></span>\\n                <span class=\\\"navbar-toggler-bar bar3\\\"></span>\\n              </button>\\n            </div>\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Dashboard</a>\\n          </div>\\n          <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navigation\\\"\\n            aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n            <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n            <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n            <span class=\\\"navbar-toggler-bar navbar-kebab\\\"></span>\\n          </button>\\n          <div class=\\\"collapse navbar-collapse\\\" id=\\\"navigation\\\">\\n            <ul class=\\\"navbar-nav ml-auto\\\">\\n              <li class=\\\"dropdown nav-item\\\">\\n                <a href=\\\"#\\\" class=\\\"dropdown-toggle nav-link\\\" data-toggle=\\\"dropdown\\\">\\n                  <div class=\\\"photo\\\">\\n                    <img src=\\\"../assets/img/anime3.png\\\" alt=\\\"Profile Photo\\\">\\n                  </div>\\n                </a>\\n                <ul class=\\\"dropdown-menu dropdown-navbar\\\">\\n                  <li class=\\\"nav-link\\\">\\n                    <a href=\\\"#\\\" class=\\\"nav-item dropdown-item\\\">Profile</a>\\n                  </li>\\n                  <li class=\\\"nav-link\\\">\\n                    <a href=\\\"#\\\" class=\\\"nav-item dropdown-item\\\">Settings</a>\\n                  </li>\\n                  <li class=\\\"dropdown-divider\\\"></li>\\n                  <li class=\\\"nav-link\\\">\\n                    <a (click)=\\\"logout()\\\" class=\\\"nav-item dropdown-item\\\">Log out</a>\\n                  </li>\\n                </ul>\\n              </li>\\n              <li class=\\\"separator d-lg-none\\\"></li>\\n            </ul>\\n          </div>\\n        </div>\\n      </nav>\\n      <!-- End Navbar -->\\n      <div class=\\\"content\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <a *ngIf=\\\"5 == Val\\\">\\n              <app-retrieve-question-bank></app-retrieve-question-bank>\\n            </a>\\n            <a *ngIf=\\\"2 == Val\\\">\\n              <app-create-questions></app-create-questions>\\n            </a>\\n            <a *ngIf=\\\"4 == Val\\\">\\n              <app-tag></app-tag>\\n            </a>\\n            <!--     <a *ngIf = \\\"4 == Val\\\">\\n                    <app-create-questions></app-create-questions>\\n                  </a>\\n                  <a *ngIf = \\\"5 == Val\\\">\\n                      <app-create-questions></app-create-questions>\\n                    </a>-->\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</body>\"","import { Component, OnInit } from '@angular/core';\nimport { ContentCreatorComponent } from '../content-creator.component';\nimport { RetrieveQuestionBankComponent } from '../retrieve-question-bank/retrieve-question-bank.component';\nimport { stringify } from '@angular/core/src/render3/util';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'angularx-social-login';\nimport { SocialUser } from 'angularx-social-login';\nimport { GoogleLoginProvider } from 'angularx-social-login';\n@Component({\n\tselector: 'app-dashboard',\n\ttemplateUrl: './dashboard.component.html',\n\tstyleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\tconstructor(private router: Router, private authService: AuthService, ) { }\n\tVal: string[];\n\tngOnInit() {\n\t\tif (localStorage.getItem('id') === null) {\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t\tthis.authService.authState.subscribe((user) => {\n\t\t\tif (user != null) {\n\t\t\t\t//\tconsole.log(user);\n\t\t\t} else {\n\t\t\t\tlocalStorage.clear();\n\t\t\t\tthis.router.navigate(['/login']);\n\t\t\t}\n\t\t})\n\t}\n\tOpen(link) {\n\t\tthis.Val = link;\n\t\tconsole.log(this.Val);\n\t}\n\tlogout() {\n\t\tthis.authService.signOut();\n\t}\n\t// onCreate() {\n\t// \tconst dialogConfig = new MatDialogConfig();\n\t// \tdialogConfig.disableClose = true;\n\t// \tdialogConfig.autoFocus = true;\n\t// \tdialogConfig.width = '60%';\n\t// \tthis.dialog.open(RetrieveQuestionBankComponent, dialogConfig);\n\t// }\n}\n","module.exports = \"th,td{\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb250ZW50LWNyZWF0b3IvcmV0cmlldmUtcXVlc3Rpb24tYmFuay9yZXRyaWV2ZS1xdWVzdGlvbi1iYW5rLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7QUFDcEIiLCJmaWxlIjoiYXBwL2NvbnRlbnQtY3JlYXRvci9yZXRyaWV2ZS1xdWVzdGlvbi1iYW5rL3JldHJpZXZlLXF1ZXN0aW9uLWJhbmsuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRoLHRke1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\"","module.exports = \"<table class=\\\"table table-bordered table-striped\\\">\\n  <thead class=\\\"thead-dark\\\">\\n    <th scope=\\\"col\\\">#Question ID</th>\\n    <th scope=\\\"col\\\">Question</th>\\n    <th scope=\\\"col\\\">Subject</th>\\n    <th scope=\\\"col\\\">Difficulty Level</th>\\n    <th scope=\\\"col\\\">Action</th>\\n\\n  </thead>\\n\\n  <tbody>\\n    <ng-container *ngFor=\\\"let ques of questionList;index as i;\\\">\\n      <tr style=\\\"color:azure\\\">\\n        <th scope=\\\"row\\\">{{i+1}}</th>\\n        <td scope=\\\"row\\\">{{ques.QuestionStatement}}</td>\\n        <td scope=\\\"row\\\">{{ques.SubjectName}}</td>\\n        <td scope=\\\"row\\\">{{ques.Difficulty}}</td>\\n        <td>\\n          <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"editUserQues(ques.QuestionId,i+1)\\\"><i\\n              class=\\\"fa fa-pencil\\\"></i></a>\\n          <a class=\\\"btn btn-sm btn-danger text-white ml-1\\\" (click)=\\\"deleteQues(ques.QuestionId)\\\"><i\\n              class=\\\"fa fa-trash\\\"></i></a>\\n        </td>\\n\\n      </tr>\\n    </ng-container>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { Question } from '../shared/question.model';\nimport { ContentCreatorServiceService } from '../shared/content-creator-service.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { UpdateQuestionComponent } from '../update-question/update-question.component';\nimport { concat } from 'rxjs';\n\n@Component({\n\tselector: 'app-retrieve-question-bank',\n\ttemplateUrl: './retrieve-question-bank.component.html',\n\tstyleUrls: ['./retrieve-question-bank.component.css']\n})\nexport class RetrieveQuestionBankComponent implements OnInit {\n\tquestionList: Question[];\n\tsearchText = '';\n\tdifficultyLevel = '';\n\n\tconstructor(private service: ContentCreatorServiceService,\n\t\tprivate toastr: ToastrService,\n\t\tprivate dialog: MatDialog) { }\n\n\tngOnInit() {\n\t\tthis.getQuesOfUser(localStorage.getItem('uid'));\n\t}\n\n\tgetQuesOfUser(uid: string) {\n\t\tthis.service.getQuesOfUser(uid).subscribe((data: any) => {\n\t\t\tthis.questionList = data as Question[];\n\t\t\tconsole.log(this.questionList);\n\t\t})\n\t}\n\tdeleteQues(qid) {\n\t\tthis.service.deleteQues(qid).subscribe((res: any) => {\n\t\t\tthis.toastr.success('Deleted Successfully', 'Assesment System');\n\t\t\tthis.getQuesOfUser(localStorage.getItem('uid'));\n\t\t});\n\t}\n\teditUserQues(quesid: number, arrayindex: number) {\n\t\tconst dialogConfig = new MatDialogConfig();\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"70%\";\n\t\tdialogConfig.disableClose = false;\n\t\tthis.service.formData = this.questionList[arrayindex - 1];\n\t\tthis.dialog.open(UpdateQuestionComponent, dialogConfig);\n\t}\n}\n","module.exports = \".card{\\n    margin: 9px auto;\\n}\\n.container{\\n    max-width: inherit;\\n    max-height: inherit;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb250ZW50LWNyZWF0b3IvcmV0cmlldmUtcXVpei9jcmVhdGUtcXVpei9jcmVhdGUtcXVpei5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6ImFwcC9jb250ZW50LWNyZWF0b3IvcmV0cmlldmUtcXVpei9jcmVhdGUtcXVpei9jcmVhdGUtcXVpei5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmR7XG4gICAgbWFyZ2luOiA5cHggYXV0bztcbn1cbi5jb250YWluZXJ7XG4gICAgbWF4LXdpZHRoOiBpbmhlcml0O1xuICAgIG1heC1oZWlnaHQ6IGluaGVyaXQ7XG59Il19 */\"","module.exports = \"<div class=\\\"card\\\" style=\\\"width: 80%; overflow: auto\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\" style=\\\"text-align: center\\\">Create A Quiz</h5><br><br>\\n    <ng-container *ngIf=\\\"val\\\">\\n      <form #form=\\\"ngForm\\\" (submit)=\\\"fetchReqQues(form)\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Select Difficulty-Level</label>\\n            <select name=\\\"Difficulty\\\" required #Difficulty=\\\"ngModel\\\" [(ngModel)]=\\\"service.quizForm.Difficulty\\\"\\n              class=\\\"form-control\\\">\\n              <option value=\\\"Beginner\\\">Easy</option>\\n              <option value=\\\"Intermediate\\\">Medium</option>\\n              <option value=\\\"Advanced\\\">Hard</option>\\n            </select>\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Difficulty.invalid && Difficulty.touched\\\">This field is required.</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Select Subject</label>\\n            <select name=\\\"SubjectId\\\" required #SubjectId=\\\"ngModel\\\" [(ngModel)]=\\\"service.quizForm.SubjectId\\\"\\n              class=\\\"form-control\\\">\\n              <option *ngFor=\\\"let Subject of Subjects;\\\" value=\\\"{{Subject.SubjectId}}\\\">{{Subject.Name}}</option>\\n            </select>\\n\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"SubjectId.invalid && SubjectId.touched\\\">This field is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary btn-block\\\">Click</button>\\n        </div>\\n      </form>\\n    </ng-container>\\n    <div *ngIf=\\\"!val\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 80%\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\" style=\\\"text-align: center\\\">Choose Questions</h5><br><br>\\n          <div class=\\\"container form-group\\\">\\n            <div *ngFor=\\\"let x of questions; let i = index\\\"><br>\\n              <input [id]=\\\"'questions-'+i\\\" type=\\\"checkbox\\\" value=\\\"{{x.Question_ID}}\\\" [checked]=\\\"x.selected\\\"\\n                (change)=\\\"updateSelectedQuestions(i)\\\">\\n              <label>{{x.QuestionStatement}}</label>\\n            </div>\\n          </div>\\n          <button type=\\\"submit\\\" (click)=\\\"checkVal()\\\" class=\\\"btn btn-primary btn-block\\\">Submit</button>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ContentCreatorServiceService } from '../../shared/content-creator-service.service';\nimport { Subject } from '../../shared/subject.model'\nimport {Question} from '../../shared/question.model';\n\n@Component({\n  selector: 'app-create-quiz',\n  templateUrl: './create-quiz.component.html',\n  styleUrls: ['./create-quiz.component.css']\n})\nexport class CreateQuizComponent implements OnInit {\n  public Subjects: Subject[];\n  questions: any[];\n  val: Boolean = true;\n  count: number = 0;\n  constructor(private service: ContentCreatorServiceService) { }\n  ngOnInit() {\n    this.resetForm();\n    this.service.retrieveSubjects().subscribe(data => {\n      this.Subjects = data as Subject[];\n      console.log(this.Subjects);\n    });\n  }\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n    else {\n      this.service.quizForm = {\n        QuizId: null,\n        Difficulty: '',\n        TotalQuestions: null,\n        TotalMarks: null,\n        Subject: '',\n        QuizType: '',\n        CreatedBy: '',\n        qId: null,\n        SubjectId: null\n      }\n      if (this.questions) {\n        this.questions.map(y => y.selected = false);\n      }\n    }\n  }\n  onSubmit(form: NgForm) {\n    console.log(this.service.quizForm.SubjectId);\n    var QuestionId = this.questions.filter(QuestionId => QuestionId.selected).map(idSelected => idSelected.QuestionId);\n    console.log(QuestionId);\n    // this.service.postQuiz(form.value, QuestionId).subscribe(res => {\n    //   console.log(this.service.quizForm.SubjectId)\n    // });;\n  }\n  fetchReqQues(form: NgForm) {\n    this.service.getQuesOfUserConstraints(form.value).subscribe((data: any) => {\n      data.forEach(obj => obj.selected = false);\n      this.questions = data;\n      console.log(this.questions);\n      \n    });\n  }\n  checkVal() {\n    this.val = true;\n  }\n  updateSelectedQuestions(index) {\n    this.questions[index].selected = !this.questions[index].selected;\n  }\n}","module.exports = \"th,td{\\n    text-align: center;\\n    color: aliceblue;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb250ZW50LWNyZWF0b3IvcmV0cmlldmUtcXVpei9yZXRyaWV2ZS1xdWl6LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0VBQ2xCIiwiZmlsZSI6ImFwcC9jb250ZW50LWNyZWF0b3IvcmV0cmlldmUtcXVpei9yZXRyaWV2ZS1xdWl6LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0aCx0ZHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6IGFsaWNlYmx1ZTtcbiAgfSJdfQ== */\"","module.exports = \"<div>\\n<br/><br/><br/>\\n<h1 style=\\\"text-align: center\\\">List of Quizzes</h1>\\n<button type=\\\"button\\\" (click)=\\\"onCreate()\\\" class=\\\"btn btn-primary\\\">Create Quiz</button>\\n<br/><br/><br/>\\n<div class=\\\"row\\\">\\n  <div>\\n    <input style=\\\"margin-left: 5%; width: 40rem\\\" #searchField class=\\\"form-control mr-sm-2 border border-secondary\\\"\\n      placeholder=\\\"Filter..\\\" aria-label=\\\"Filter\\\" #searchInput=\\\"ngModel\\\" [(ngModel)]=\\\"searchText\\\">\\n  </div>\\n  <div>\\n    <select (change)=\\\"filterSubject($event)\\\" #dropdown style=\\\"margin-left :40%\\\" class=\\\"form-control border border-secondary\\\">\\n      <option  selected value>Choose Difficulty Level</option>\\n      <option value=\\\"Beginner\\\">Beginner</option>\\n      <option value=\\\"Intermediate\\\">Intermediate</option>\\n      <option value=\\\"Advanced\\\">Advanced</option>\\n    </select>\\n  </div>\\n</div>\\n<br /><br />\\n<table class=\\\"table table-bordered table-striped\\\">\\n  <thead class=\\\"thead-dark\\\">\\n    <th scope=\\\"col\\\">#Quiz ID</th>\\n    <th scope=\\\"col\\\">Quiz Type</th>\\n    <th scope=\\\"col\\\">Difficulty</th>\\n    <th scope=\\\"col\\\">Subject</th>\\n    <th scope=\\\"col\\\">Total Questions</th>\\n    <th scope=\\\"col\\\">Total Marks</th>\\n    <th scope=\\\"col\\\">Action</th>\\n  </thead>\\n\\n  <tbody>\\n    <ng-container *ngFor=\\\"let item of QuizList;index as i\\\">\\n      <tr *ngIf=\\\"(filter(item))\\\">\\n        <th scope=\\\"row\\\">{{i+1}}</th>\\n        <td scope=\\\"row\\\">{{item.QuizType}}</td>\\n        <td scope=\\\"row\\\">{{item.Difficulty}}</td>\\n        <td scope=\\\"row\\\">{{item.Subject}}</td>\\n        <td scope=\\\"row\\\">{{item.TotalQuestions}}</td>\\n        <td scope=\\\"row\\\">{{item.TotalMarks}}</td>\\n        <td>\\n          <a class=\\\"btn text-danger\\\" (click)=\\\"onEdit(item.QuizId)\\\"><i class=\\\"far fa-edit fa-lg\\\"></i></a>\\n          <a class=\\\"btn text-danger\\\" (click)=\\\"onDelete(item.QuizId)\\\"><i class=\\\"fa fa-trash fa-lg\\\"></i></a>\\n        </td>\\n      </tr>\\n    </ng-container>\\n  </tbody>\\n</table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TagModel } from '../shared/tags.model';\nimport { ContentCreatorServiceService } from '../shared/content-creator-service.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\nimport { QuizModel } from '../shared/quiz.model';\nimport { CreateQuizComponent } from './create-quiz/create-quiz.component';\n\n@Component({\n\tselector: 'app-tag',\n\ttemplateUrl: './retrieve-quiz.component.html',\n\tstyleUrls: ['./retrieve-quiz.component.css']\n})\nexport class RetrieveQuizComponent implements OnInit {\n  QuizList: QuizModel[];\n\tsearchText = '';\n\tdifficultyLevel = '';\n\tindex = 0;\n\tconstructor(private service: ContentCreatorServiceService, \n\t\tprivate router: Router,\n\t\tprivate dialog: MatDialog,\n\t\tprivate toastr: ToastrService) { }\n\t\n\tngOnInit() {\n\t\tthis.loadQuiz();\n\t}\n\tloadQuiz() {\n\t\tthis.service.getQuizzes().subscribe((res: any) => {\n\t\t\tthis.QuizList = res as QuizModel[];\n\t\t});\n  }\n  filter(item: QuizModel) {\n\t\treturn (\n\t\t\titem.Subject.toLowerCase().indexOf(this.searchText.toLowerCase()) > -1\n\t\t\t// || item.SubjectName.toLowerCase().indexOf(this.searchText.toLowerCase()) > -1\n\t\t\t&& item.Difficulty.toLowerCase().indexOf(this.difficultyLevel.toLowerCase()) > -1\n\t\t);\n\t}\n\n\tfilterSubject(event: any) {\n\t\tthis.difficultyLevel = event.target.value;\n\t\tconsole.log(this.difficultyLevel);\n\t}\n\tonCreate() {\n\t\tconst dialogConfig = new MatDialogConfig();\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"70%\";\n\t\tdialogConfig.disableClose = true;\n\t\tlet dialogRef = this.dialog.open(CreateQuizComponent, dialogConfig);\n\t\tdialogRef.afterClosed().subscribe(result => {\n      this.service.quizForm.QuizId= null;\n\t\t  });\n\t}\n\n\tonDelete(id: number) {\n\t\tconsole.log(id);\n\t\tif (confirm('Are you sure you want to delete this quiz?')) {\n\t\t\tthis.service.deleteQuiz(id).subscribe((res: any) => {\n\t\t\t\tthis.loadQuiz();\n\t\t\t\tthis.toastr.success('Deleted Successfully', 'Assesment System');\n\t\t\t});\n\t\t}\n\t}\n\n\t// onEdit(id:number){\n\t// \tconst dialogConfig = new MatDialogConfig();\n\t// \tdialogConfig.autoFocus = true;\n\t// \tdialogConfig.width = \"70%\";\n\t// \tdialogConfig.disableClose = false;\n\t// \tdialogConfig.data = this.QuizList[id-1];\n\t// \tthis.dialog.open(RetrieveQuizComponent, dialogConfig).afterClosed().subscribe(res=>\n\t// \t\t{\n\t// \t\t  this.loadQuiz();\n\t  \n\t// \t\t});\n\t// }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Question } from 'src/app/content-creator/shared/question.model';\nimport { environment } from 'src/environments/environment';\nimport { TagModel } from './tags.model';\nimport { QuizModel } from './quiz.model'\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ContentCreatorServiceService {\n\ttagForm: TagModel;\n\tformData: Question;\n\tquizForm: QuizModel;\n\trootURL = 'http://408168d5.ngrok.io/api/';\n\tpublic createdBy;\n\tconstructor(private http: HttpClient) { }\n\tpostQuestion(formData: Question) {\n\t\tconsole.log(formData);\n\t\treturn this.http.post(this.rootURL + 'Question/CreateQuestion', formData);\n\t}\n\tupdateQuestion(formData: Question) {\n\t\tconsole.log(formData);\n\t\treturn this.http.put(this.rootURL + '' + formData.QuestionId, formData);\n\t}\n\tretrieveSubjects() {\n\t\treturn this.http.get(this.rootURL + 'Subject/GetSubjects');\n\t}\n\tgetQuesOfUser(uid: string) {\n\t\treturn this.http.get(this.rootURL + 'Question/GetQuestionByUser/' + localStorage.getItem('uid'));\n\t}\n\tdeleteQues(qid) {\n\t\tconsole.log(qid);\n\t\treturn this.http.delete(this.rootURL + '/Question/Delete/' + qid);\n\t}\n\n\tgetTags() {\n\t\treturn this.http.get(this.rootURL + 'Subject/GetSubjects/' + localStorage.getItem('uid'));\n\t}\n\tpostTags(tagForm: TagModel) {\n\t\tconsole.log(tagForm);\n\t\tif (tagForm.SubjectId === null) {\n\t\t\treturn this.http.post(this.rootURL + 'Subject/CreateSubject', tagForm);\n\t\t} else {\n\t\t\treturn this.http.put(this.rootURL + 'Subject/Edit/' + tagForm.SubjectId, tagForm);\n\t\t}\n\n\t}\n\tdeleteTags(id: number) {\n\t\treturn this.http.delete(environment.apiURl + '/Tag/Delete/' + id);\n\t}\n\tgetQuizzes() {\n\t\treturn this.http.get(this.rootURL + 'Quiz/GetQuiz/' + localStorage.getItem('uid'));\n\t}\n\tdeleteQuiz(id: number) {\n\t\treturn this.http.delete(this.rootURL + '/Quiz/Delete/' + id);\n\t}\n\n\tgetQuesOfUserConstraints(form: any) {\n\t\tconsole.log(form);\n\t\treturn this.http.get(this.rootURL);\n\t}\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29udGVudC1jcmVhdG9yL3RhZy9jcmVhdGV0YWcvY3JlYXRldGFnLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card\\\" style=\\\"width: 80%;\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">{{Option}} Tag</h5>\\n    <form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\" autocomplete=\\\"off\\\">\\n      <input type=\\\"hidden\\\" name=\\\"CreatedBy\\\" #CreatedBy=\\\"ngModel\\\" [(ngModel)]=\\\"userId\\\">\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <input type=\\\"hidden\\\" name=\\\"SubjectId\\\" #SubjectId=\\\"ngModel\\\" [(ngModel)]=\\\"service.tagForm.SubjectId\\\" class=\\\"form-control\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n              <label>Name</label>\\n              <input required type=\\\"text\\\" name=\\\"Name\\\" #Name=\\\"ngModel\\\" [(ngModel)]=\\\"service.tagForm.Name\\\"\\n                class=\\\"form-control\\\">\\n              <div class=\\\"validation-error\\\" *ngIf=\\\"Name.invalid && Name.touched\\\">This field is required.</div>\\n          </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Department</label>\\n          <input required type=\\\"text\\\" name=\\\"Department\\\" #Department=\\\"ngModel\\\" [(ngModel)]=\\\"service.tagForm.Department\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Department.invalid && Department.touched\\\">This field is required.</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button style=\\\"margin:0 5%\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-danger\\\" [mat-dialog-close]> Close</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { ContentCreatorServiceService } from '../../shared/content-creator-service.service';\nimport { TagModel } from '../../shared/tags.model';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n@Component({\n\tselector: 'app-createtag',\n\ttemplateUrl: './createtag.component.html',\n\tstyleUrls: ['./createtag.component.css']\n})\nexport class CreatetagComponent implements OnInit {\n\tpublic model: TagModel;\n\tuserId = \"\";\n\tOption: string = '';\n\tconstructor(\n\t\t@Inject(MAT_DIALOG_DATA) public data,\n\t\tpublic dialogRef: MatDialogRef<CreatetagComponent>,\n\t\tprivate service: ContentCreatorServiceService,\n\t\tprivate toastr: ToastrService) { }\n\n\tngOnInit() {\n\t\t// console.log(this.service.tagForm);\n\t\tthis.userId = localStorage.getItem('uid');\n\t\tif (this.data === null) {\n\t\t\t// console.log(this.service.tagForm);\n\t\t\tthis.Option = 'Create';\n\t\t\tthis.resetForm();\n\t\t}\n\t\telse {\n\t\t\t// console.log(this.service.tagForm);\n\t\t\tthis.Option = 'Update';\n\t\t\tthis.service.tagForm = this.data;\n\t\t\tconsole.log(this.service.tagForm);\n\t\t}\n\t}\n\tresetForm(form?: NgForm) {\n\t\tif (form != null) {\n\t\t\tform.resetForm();\n\t\t}\n\n\t\tthis.service.tagForm = {\n\t\t\tSubjectId: null,\n\t\t\tName: '',\n\t\t\tDepartment: ''\n\t\t};\n\t}\n\tonSubmit(form: NgForm) {\n\t\tthis.service.postTags(form.value).subscribe(res => {\n\t\t\tthis.toastr.success('Inserted successfully');\n\t\t\tthis.resetForm(form);\n\t\t});;\n\t\t//this.dialogRef.close();\n\t}\n}\n","module.exports = \"table {\\n\\twidth: 100%;\\n\\tmargin-top: 10px;\\n}\\n.container-fluid {\\n\\tmargin: 7px auto;\\n\\tpadding: 5px auto;\\n}\\nh4 {\\n\\ttext-align: center;\\n}\\n.th .mat-header-cell {\\n\\tpadding-left: 20px !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb250ZW50LWNyZWF0b3IvdGFnL3JldHJpZXZldGFnL3RhZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsV0FBVztDQUNYLGdCQUFnQjtBQUNqQjtBQUNBO0NBQ0MsZ0JBQWdCO0NBQ2hCLGlCQUFpQjtBQUNsQjtBQUNBO0NBQ0Msa0JBQWtCO0FBQ25CO0FBQ0E7Q0FDQyw2QkFBNkI7QUFDOUIiLCJmaWxlIjoiYXBwL2NvbnRlbnQtY3JlYXRvci90YWcvcmV0cmlldmV0YWcvdGFnLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XG5cdHdpZHRoOiAxMDAlO1xuXHRtYXJnaW4tdG9wOiAxMHB4O1xufVxuLmNvbnRhaW5lci1mbHVpZCB7XG5cdG1hcmdpbjogN3B4IGF1dG87XG5cdHBhZGRpbmc6IDVweCBhdXRvO1xufVxuaDQge1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4udGggLm1hdC1oZWFkZXItY2VsbCB7XG5cdHBhZGRpbmctbGVmdDogMjBweCAhaW1wb3J0YW50O1xufVxuIl19 */\"","module.exports = \"<div>\\n  <button mat-raised-button (click)=\\\"onCreate()\\\">\\n    <mat-icon>add</mat-icon>Create\\n  </button>\\n</div>\\n<table class=\\\"table table-bordered table-striped\\\">\\n  <thead class=\\\"thead-dark\\\">\\n    <th scope=\\\"col\\\">#Subject ID</th>\\n    <th scope=\\\"col\\\">Subject</th>\\n    <th scope=\\\"col\\\">Department</th>\\n    <th scope=\\\"col\\\">Action</th>\\n\\n  </thead>\\n\\n  <tbody>\\n    <ng-container *ngFor=\\\"let tag of tagList;index as i;\\\">\\n      <tr style=\\\"color:azure\\\">\\n        <th scope=\\\"row\\\">{{i+1}}</th>\\n        <td scope=\\\"row\\\">{{tag.Name}}</td>\\n        <td scope=\\\"row\\\">{{tag.Department}}</td>\\n        <td>\\n          <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"onEdit(i+1)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n        </td>\\n\\n      </tr>\\n    </ng-container>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { TagModel } from '../../shared/tags.model';\nimport { ContentCreatorServiceService } from '../../shared/content-creator-service.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\nimport { CreatetagComponent } from '../createtag/createtag.component';\n\n@Component({\n\tselector: 'app-tag',\n\ttemplateUrl: './tag.component.html',\n\tstyleUrls: ['./tag.component.css']\n})\nexport class TagComponent implements OnInit {\n\ttagList: TagModel[];\n\tconstructor(private service: ContentCreatorServiceService,\n\t\tprivate router: Router,\n\t\tprivate dialog: MatDialog,\n\t\tprivate toastr: ToastrService) { }\n\n\tngOnInit() {\n\t\tthis.loadTags();\n\t}\n\tloadTags() {\n\t\tthis.service.getTags().subscribe((res: any) => {\n\t\t\tconsole.log(res);\n\t\t\tthis.tagList = res as TagModel[];\n\t\t});\n\t}\n\tonCreate() {\n\t\tconst dialogConfig = new MatDialogConfig();\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"70%\";\n\t\tdialogConfig.disableClose = true;\n\t\tlet dialogRef = this.dialog.open(CreatetagComponent, dialogConfig);\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tthis.service.tagForm.SubjectId = null;\n\t\t\tthis.ngOnInit();\n\t\t});\n\t}\n\t// onDelete(id: number) {\n\t// \tconsole.log(id);\n\t// \tif (confirm('Are you sure you want to delete this record')) {\n\t// \t\tthis.service.deleteTags(id).subscribe((res: any) => {\n\t// \t\t\tthis.loadTags();\n\t// \t\t\tthis.toastr.success('Deleted Successfully', 'Assesment System');\n\t// \t\t});\n\t// \t}\n\t// }\n\tonEdit(id: number) {\n\t\t// console.log(id);\n\t\tconst dialogConfig = new MatDialogConfig();\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"70%\";\n\t\tdialogConfig.disableClose = false;\n\t\tdialogConfig.data = this.tagList[id - 1];\n\t\tconsole.log(dialogConfig.data);\n\t\tlet dialogRef = this.dialog.open(CreatetagComponent, dialogConfig);\n\t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29udGVudC1jcmVhdG9yL3VwZGF0ZS1xdWVzdGlvbi91cGRhdGUtcXVlc3Rpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"card\\\" style=\\\"width: 80%;\\\">\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">Edit Questions</h5>\\n      <form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\" autocomplete=\\\"off\\\">\\n        <input type=\\\"hidden\\\" name=\\\"Question_ID\\\" #Question_ID=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Question_ID\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Question</label>\\n          <textarea class=\\\"form-control\\\" name=\\\"QuestionStatement\\\" #QuestionStatement=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"service.formData.QuestionStatement\\\" rows=\\\"3\\\"></textarea>\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"QuestionStatement.invalid && QuestionStatement.touched\\\">This field is\\n            required.\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Option 1</label>\\n            <input required type=\\\"text\\\" name=\\\"Option1\\\" #Option1=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option1\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Option1.invalid && Option1.touched\\\">This field is required.</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Option 2</label>\\n            <input required type=\\\"text\\\" name=\\\"Option2\\\" #Option2=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option2\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Option2.invalid && Option2.touched\\\">This field is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Option 3</label>\\n            <input required type=\\\"text\\\" name=\\\"Option3\\\" #Option3=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option3\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Option3.invalid && Option3.touched\\\">This field is required.</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Option 4</label>\\n            <input required type=\\\"text\\\" name=\\\"Option4\\\" #Option4=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option4\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Option4.invalid && Option4.touched\\\">This field is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Correct Option</label>\\n            <input required type=\\\"text\\\" name=\\\"Answer\\\" #Answer=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Answer\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Answer.invalid && Answer.touched\\\">This field is required.\\n            </div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Marks</label>\\n            <input required type=\\\"text\\\" name=\\\"Marks\\\" #Marks=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Marks\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Marks.invalid && Marks.touched\\\">This field is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Select Subject</label>\\n            <select name=\\\"SubjectId\\\" required #SubjectId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.SubjectId\\\"\\n              class=\\\"form-control\\\">\\n              <option value=\\\"\\\">Choose</option>\\n              <option *ngFor=\\\"let Subject of Subjects\\\" value=\\\"{{Subject.SubjectId}}\\\">{{Subject.Name}}</option>\\n            </select>\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"SubjectId.invalid && SubjectId.touched\\\">This field is required.</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Select Difficulty-Level</label>\\n            <select name=\\\"Difficulty\\\" required #Difficulty=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Difficulty\\\"\\n              class=\\\"form-control\\\">\\n              <option value=\\\"\\\">Choose</option>\\n              <option value=\\\"Beginner\\\">Easy</option>\\n              <option value=\\\"Intermediate\\\">Medium</option>\\n              <option value=\\\"Advanced\\\">Hard</option>\\n            </select>\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Difficulty.invalid && Difficulty.touched\\\">This field is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button style=\\\"margin:0 5%\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-danger\\\" [mat-dialog-close]> Close</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ContentCreatorServiceService } from 'src/app/content-creator/shared/content-creator-service.service'\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'src/app/content-creator/shared/subject.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-update-question',\n  templateUrl: './update-question.component.html',\n  styleUrls: ['./update-question.component.css']\n})\nexport class UpdateQuestionComponent implements OnInit {\n  public Subjects: Subject[];\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data, \n          public dialogRef : MatDialogRef<UpdateQuestionComponent>,\n          public service: ContentCreatorServiceService, \n          public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.service.retrieveSubjects().subscribe(res => {\n      this.Subjects = res as Subject[];\n    });\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n    this.service.formData = {\n      QuestionId: null,\n      QuestionStatement: \"\",\n      Option1: \"\",\n      Option2: \"\",\n      Option3: \"\",\n      Option4: \"\",\n      Answer: null,\n      Marks: null,\n      Difficulty: \"\",\n      SubjectId: \"\",\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    this.service.updateQuestion(form.value).subscribe(res => {\n      this.toastr.success('Updated successfully');\n      this.resetForm(form);\n    });;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router,\n    private http: HttpClient) { }\n  rooturl = 'http://408168d5.ngrok.io/api/';\n  role = \"\";\n  uid = \"\";\n  ngOnInit() {\n    if (localStorage.getItem('id') != null) {\n      const body = {\n        FirstName: localStorage.getItem('firstname'),\n        LastName: localStorage.getItem('lastname'),\n        Email: localStorage.getItem('email'),\n        ImgURL: localStorage.getItem('imgurl'),\n        GoogleId: localStorage.getItem('id')\n      };\n      // console.log(body);\n      this.http.post(this.rooturl + 'User/Register', body).subscribe((res: any) => {\n        // console.log(res);\n        this.http.get(this.rooturl + 'GetUserDetails?email=' + localStorage.getItem('email')).subscribe((res1: any) => {\n          console.log(res1);\n          this.uid = res1.Id;\n          this.role = res1.Roles[0].RoleId;\n          console.log(this.uid);\n          console.log(this.role);\n          localStorage.setItem('uid', this.uid);\n          localStorage.setItem('role', this.role);\n          this.redirecttodash(this.role);\n        })\n        // this.role = res.role;\n        // this.uid = res.Id\n        // localStorage.setItem('userId', this.uid);\n        // localStorage.setItem('role', this.role);\n        // this.redirecttodash(this.role);\n      });\n\n\n    } else {\n      console.log(\"sigin first\");\n      this.router.navigate(['/login']);\n    }\n  }\n  redirecttodash(role: string) {\n    if (this.role === '2') {\n      console.log('i am content creator');\n      this.router.navigate(['/cc-dash']);\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"card-block\\\">\\n  <button class=\\\"btn btn-success\\\" (click)=\\\"signInWithGoogle()\\\"><span\\n      class=\\\"fa fa-google\\\"></span></button>\\n</div>\\n<div class=\\\"card-block\\\" *ngIf=\\\"user\\\">\\n  <button class=\\\"btn btn-danger\\\" (click)=\\\"signOut()\\\">Sign out</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'angularx-social-login';\nimport { SocialUser } from 'angularx-social-login';\nimport { GoogleLoginProvider } from 'angularx-social-login';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user: SocialUser;\n  constructor(private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.authService.authState.subscribe((user) => {\n      this.user = user;\n      if (user != null) {\n        console.log(this.user);\n        localStorage.setItem('token', this.user.idToken);\n        localStorage.setItem('email', this.user.email);\n        localStorage.setItem('firstname', this.user.firstName);\n        localStorage.setItem('lastname', this.user.lastName);\n        localStorage.setItem('id', this.user.id);\n        localStorage.setItem('imgurl', this.user.photoUrl);\n        localStorage.setItem('provider', this.user.provider);\n        this.router.navigate(['/home']);\n      } else {\n        localStorage.clear();\n        console.log('not signed in');\n      }\n    });\n  }\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n  signOut(): void {\n    this.authService.signOut();\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURl: 'https://00a0d9f2.ngrok.io/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}