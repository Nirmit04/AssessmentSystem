{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/content-creator/content-creator.component.css","webpack:///./src/app/content-creator/content-creator.component.html","webpack:///./src/app/content-creator/content-creator.component.ts","webpack:///./src/app/content-creator/create-questions/create-questions.component.css","webpack:///./src/app/content-creator/create-questions/create-questions.component.html","webpack:///./src/app/content-creator/create-questions/create-questions.component.ts","webpack:///./src/app/content-creator/main-nav/main-nav.component.css","webpack:///./src/app/content-creator/main-nav/main-nav.component.html","webpack:///./src/app/content-creator/main-nav/main-nav.component.ts","webpack:///./src/app/content-creator/retrieve-question-bank/retrieve-question-bank.component.css","webpack:///./src/app/content-creator/retrieve-question-bank/retrieve-question-bank.component.html","webpack:///./src/app/content-creator/retrieve-question-bank/retrieve-question-bank.component.ts","webpack:///./src/app/content-creator/retrieve-quiz/add-ques-in-quiz/add-ques-in-quiz.component.css","webpack:///./src/app/content-creator/retrieve-quiz/add-ques-in-quiz/add-ques-in-quiz.component.html","webpack:///./src/app/content-creator/retrieve-quiz/add-ques-in-quiz/add-ques-in-quiz.component.ts","webpack:///./src/app/content-creator/retrieve-quiz/archive-quiz/archive-quiz.component.css","webpack:///./src/app/content-creator/retrieve-quiz/archive-quiz/archive-quiz.component.html","webpack:///./src/app/content-creator/retrieve-quiz/archive-quiz/archive-quiz.component.ts","webpack:///./src/app/content-creator/retrieve-quiz/create-quiz/create-quiz.component.css","webpack:///./src/app/content-creator/retrieve-quiz/create-quiz/create-quiz.component.html","webpack:///./src/app/content-creator/retrieve-quiz/create-quiz/create-quiz.component.ts","webpack:///./src/app/content-creator/retrieve-quiz/retrieve-quiz.component.css","webpack:///./src/app/content-creator/retrieve-quiz/retrieve-quiz.component.html","webpack:///./src/app/content-creator/retrieve-quiz/retrieve-quiz.component.ts","webpack:///./src/app/content-creator/retrieve-quiz/update-quiz/update-quiz.component.css","webpack:///./src/app/content-creator/retrieve-quiz/update-quiz/update-quiz.component.html","webpack:///./src/app/content-creator/retrieve-quiz/update-quiz/update-quiz.component.ts","webpack:///./src/app/content-creator/shared/content-creator-service.service.ts","webpack:///./src/app/content-creator/tag/createtag/createtag.component.css","webpack:///./src/app/content-creator/tag/createtag/createtag.component.html","webpack:///./src/app/content-creator/tag/createtag/createtag.component.ts","webpack:///./src/app/content-creator/tag/retrievetag/tag.component.css","webpack:///./src/app/content-creator/tag/retrievetag/tag.component.html","webpack:///./src/app/content-creator/tag/retrievetag/tag.component.ts","webpack:///./src/app/content-creator/update-question/update-question.component.css","webpack:///./src/app/content-creator/update-question/update-question.component.html","webpack:///./src/app/content-creator/update-question/update-question.component.ts","webpack:///./src/app/content-creator/user-details/user-details.component.css","webpack:///./src/app/content-creator/user-details/user-details.component.html","webpack:///./src/app/content-creator/user-details/user-details.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/test-admin/main-nav2/main-nav2.component.css","webpack:///./src/app/test-admin/main-nav2/main-nav2.component.html","webpack:///./src/app/test-admin/main-nav2/main-nav2.component.ts","webpack:///./src/app/test-admin/retrieve-schedule/add-user/add-user.component.css","webpack:///./src/app/test-admin/retrieve-schedule/add-user/add-user.component.html","webpack:///./src/app/test-admin/retrieve-schedule/add-user/add-user.component.ts","webpack:///./src/app/test-admin/retrieve-schedule/create-schedule/create-schedule.component.css","webpack:///./src/app/test-admin/retrieve-schedule/create-schedule/create-schedule.component.html","webpack:///./src/app/test-admin/retrieve-schedule/create-schedule/create-schedule.component.ts","webpack:///./src/app/test-admin/retrieve-schedule/retrieve-schedule.component.css","webpack:///./src/app/test-admin/retrieve-schedule/retrieve-schedule.component.html","webpack:///./src/app/test-admin/retrieve-schedule/retrieve-schedule.component.ts","webpack:///./src/app/test-admin/retrieve-schedule/view-schedule/view-schedule.component.css","webpack:///./src/app/test-admin/retrieve-schedule/view-schedule/view-schedule.component.html","webpack:///./src/app/test-admin/retrieve-schedule/view-schedule/view-schedule.component.ts","webpack:///./src/app/test-admin/shared/test-admin.service.ts","webpack:///./src/app/test-admin/test-admin.component.css","webpack:///./src/app/test-admin/test-admin.component.html","webpack:///./src/app/test-admin/test-admin.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RetrieveQuestionBankComponent } from './content-creator/retrieve-question-bank/retrieve-question-bank.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { AppComponent } from './app.component';\nimport { TagComponent } from './content-creator/tag/retrievetag/tag.component';\nimport { RetrieveQuizComponent } from './content-creator/retrieve-quiz/retrieve-quiz.component';\nimport { CreateQuestionsComponent } from './content-creator/create-questions/create-questions.component';\nimport { MainNavComponent } from './content-creator/main-nav/main-nav.component';\nimport { UserDetailsComponent } from './content-creator/user-details/user-details.component';\nimport { AuthGuard } from './auth.guard';\nimport { ArchiveQuizComponent } from './content-creator/retrieve-quiz/archive-quiz/archive-quiz.component';\nimport { CreateScheduleComponent } from './test-admin/retrieve-schedule/create-schedule/create-schedule.component';\nimport { RetrieveScheduleComponent } from './test-admin/retrieve-schedule/retrieve-schedule.component';\nimport { MainNav2Component } from './test-admin/main-nav2/main-nav2.component';\n\nconst routes: Routes = [\n\t{ path: 'home', component: HomeComponent },\n\t{ path: '', component: LoginComponent, pathMatch: 'full' },\n\t{ path: 'app-root', component: AppComponent },\n\t{ path: 'cc-dash', component: UserDetailsComponent, canActivate: [AuthGuard] },\n\t{ path: 'login', component: LoginComponent },\n\t{ path: 'tag', component: TagComponent, canActivate: [AuthGuard] },\n\t{ path: 'quiz', component: RetrieveQuizComponent, canActivate: [AuthGuard] },\n\t{ path: 'rqbank', component: RetrieveQuestionBankComponent, canActivate: [AuthGuard] },\n\t{ path: 'create-question', component: CreateQuestionsComponent, canActivate: [AuthGuard] },\n\t{ path: 'archive-quiz', component: ArchiveQuizComponent, canActivate: [AuthGuard] },\n\t{ path: 'testAdminCreateScheDule', component: CreateScheduleComponent, canActivate: [AuthGuard] },\n\t{ path: 'retrieve-schedule', component: RetrieveScheduleComponent, canActivate: [AuthGuard] },\n\t{ path: 'ta-dash', component: MainNav2Component, canActivate: [AuthGuard] }\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- <app-login></app-login> -->\\n<!-- <app-main-nav></app-main-nav> -->\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'WebApp';\n\n  constructor() { }\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CreateQuestionsComponent } from './content-creator/create-questions/create-questions.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContentCreatorComponent } from './content-creator/content-creator.component';\nimport { RetrieveQuestionBankComponent } from './content-creator/retrieve-question-bank/retrieve-question-bank.component';\nimport { ContentCreatorServiceService } from './content-creator/shared/content-creator-service.service';\nimport { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login';\nimport { GoogleLoginProvider } from 'angularx-social-login';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CreatetagComponent } from './content-creator/tag/createtag/createtag.component';\nimport { TagComponent } from './content-creator/tag/retrievetag/tag.component';\nimport { RetrieveQuizComponent } from './content-creator/retrieve-quiz/retrieve-quiz.component';\nimport { CreateQuizComponent } from './content-creator/retrieve-quiz/create-quiz/create-quiz.component';\nimport { UpdateQuestionComponent } from './content-creator/update-question/update-question.component';\nimport { UpdateQuizComponent } from './content-creator/retrieve-quiz/update-quiz/update-quiz.component';\nimport { AddQuesInQuizComponent } from './content-creator/retrieve-quiz/add-ques-in-quiz/add-ques-in-quiz.component';\nimport { MainNavComponent } from './content-creator/main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatSidenavModule, MatListModule } from '@angular/material';\nimport { UserDetailsComponent } from './content-creator/user-details/user-details.component';\nimport { AuthGuard } from './auth.guard';\nimport { TestAdminComponent } from './test-admin/test-admin.component';\nimport { RetrieveScheduleComponent } from './test-admin/retrieve-schedule/retrieve-schedule.component';\nimport { CreateScheduleComponent } from './test-admin/retrieve-schedule/create-schedule/create-schedule.component';\nimport { AddUserComponent } from './test-admin/retrieve-schedule/add-user/add-user.component';\nimport { ArchiveQuizComponent } from './content-creator/retrieve-quiz/archive-quiz/archive-quiz.component';\nimport { MainNav2Component } from './test-admin/main-nav2/main-nav2.component';\nimport { ViewScheduleComponent } from './test-admin/retrieve-schedule/view-schedule/view-schedule.component';\nlet config = new AuthServiceConfig([\n\t{\n\t\tid: GoogleLoginProvider.PROVIDER_ID,\n\t\tprovider: new GoogleLoginProvider('819840688710-ljvg9sqe86d08r2hlgv6e9s74i3jmiq0.apps.googleusercontent.com')\n\t}\n]);\n\nexport function provideConfig() {\n\treturn config;\n}\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tCreateQuestionsComponent,\n\t\tRetrieveQuestionBankComponent,\n\t\tContentCreatorComponent,\n\t\tLoginComponent,\n\t\tHomeComponent,\n\t\tCreatetagComponent,\n\t\tTagComponent,\n\t\tRetrieveQuizComponent,\n\t\tCreateQuizComponent,\n\t\tUpdateQuestionComponent,\n\t\tUpdateQuizComponent,\n\t\tAddQuesInQuizComponent,\n\t\tMainNavComponent,\n\t\tUserDetailsComponent,\n\t\tTestAdminComponent,\n\t\tRetrieveScheduleComponent,\n\t\tCreateScheduleComponent,\n\t\tAddUserComponent,\n\t\tArchiveQuizComponent,\n\t\tMainNav2Component,\n\t\tViewScheduleComponent\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule,\n\t\tFormsModule,\n\t\tHttpClientModule,\n\t\tBrowserAnimationsModule,\n\t\tToastrModule.forRoot(),\n\t\tSocialLoginModule,\n\t\tMatDialogModule,\n\t\tMatButtonModule,\n\t\tMatFormFieldModule,\n\t\tMatIconModule,\n\t\tMatTableModule,\n\t\tLayoutModule,\n\t\tMatToolbarModule,\n\t\tMatSidenavModule,\n\t\tMatListModule\n\t],\n\tproviders: [\n\t\tAuthGuard,\n\t\tContentCreatorServiceService,\n\t\t{\n\t\t\tprovide: AuthServiceConfig,\n\t\t\tuseFactory: provideConfig\n\t\t}\n\t],\n\tbootstrap: [AppComponent],\n\tentryComponents: [\n\t\tCreatetagComponent,\n\t\tUpdateQuestionComponent,\n\t\tCreateQuizComponent,\n\t\tUpdateQuizComponent,\n\t\tAddQuesInQuizComponent,\n\t\tAddUserComponent,\n\t\tViewScheduleComponent\n\n\t],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n\tconstructor(private router: Router) { }\n\tcanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\t\tif (localStorage.getItem('uid') != null) {\n\t\t\treturn true;\n\t\t}\n\t\tlocalStorage.clear();\n\t\tthis.router.navigate(['/login']);\n\t\treturn false;\n\t}\n\tcanActivateChild(\n\t\tnext: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\t\treturn true;\n\t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQtY3JlYXRvci9jb250ZW50LWNyZWF0b3IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>this is working</h1>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-content-creator',\n  templateUrl: './content-creator.component.html',\n  styleUrls: ['./content-creator.component.css']\n})\nexport class ContentCreatorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQtY3JlYXRvci9jcmVhdGUtcXVlc3Rpb25zL2NyZWF0ZS1xdWVzdGlvbnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-main-nav>\\n  <div class=\\\"card\\\" style=\\\"width: 80%;\\\">\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">Add Questions</h5>\\n      <form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\" autocomplete=\\\"off\\\">\\n        <input type=\\\"hidden\\\" name=\\\"CreatedBy\\\" #CreatedBy=\\\"ngModel\\\" [(ngModel)]=\\\"CCreatedBy\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Question</label>\\n          <textarea class=\\\"form-control\\\" name=\\\"QuestionStatement\\\" #QuestionStatement=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"service.formData.QuestionStatement\\\" rows=\\\"3\\\" required></textarea>\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"QuestionStatement.invalid && QuestionStatement.touched\\\">This field is\\n            required.\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Option 1</label>\\n            <input required type=\\\"text\\\" name=\\\"Option1\\\" #Option1=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option1\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Option1.invalid && Option1.touched\\\">This field is required.</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Option 2</label>\\n            <input required type=\\\"text\\\" name=\\\"Option2\\\" #Option2=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option2\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Option2.invalid && Option2.touched\\\">This field is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Option 3</label>\\n            <input required type=\\\"text\\\" name=\\\"Option3\\\" #Option3=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option3\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Option3.invalid && Option3.touched\\\">This field is required.</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Option 4</label>\\n            <input required type=\\\"text\\\" name=\\\"Option4\\\" #Option4=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option4\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Option4.invalid && Option4.touched\\\">This field is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Correct Option</label>\\n            <input required type=\\\"text\\\" name=\\\"Answer\\\" #Answer=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Answer\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Answer.invalid && Answer.touched\\\">This field is required.\\n            </div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Marks</label>\\n            <input required type=\\\"text\\\" name=\\\"Marks\\\" #Marks=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Marks\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Marks.invalid && Marks.touched\\\">This field is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Select Subject</label>\\n            <select name=\\\"SubjectId\\\" required #SubjectId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.SubjectId\\\"\\n              class=\\\"form-control\\\">\\n              <option value=\\\"\\\">Choose</option>\\n              <option *ngFor=\\\"let Subject of Subjects\\\" value=\\\"{{Subject.SubjectId}}\\\">{{Subject.Name}}</option>\\n            </select>\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"SubjectId.invalid && SubjectId.touched\\\">This field is required.</div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Select Difficulty-Level</label>\\n            <select name=\\\"Difficulty\\\" required #Difficulty=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Difficulty\\\"\\n              class=\\\"form-control\\\">\\n              <option value=\\\"\\\">Choose</option>\\n              <option value=\\\"Beginner\\\">Easy</option>\\n              <option value=\\\"Intermediate\\\">Medium</option>\\n              <option value=\\\"Advanced\\\">Hard</option>\\n            </select>\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Difficulty.invalid && Difficulty.touched\\\">This field is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary btn-block\\\">Submit</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</app-main-nav>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ContentCreatorServiceService } from '../shared/content-creator-service.service'\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from '../shared/subject.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n@Component({\n  selector: 'app-create-questions',\n  templateUrl: './create-questions.component.html',\n  styleUrls: ['./create-questions.component.css']\n})\nexport class CreateQuestionsComponent implements OnInit {\n  public Subjects: Subject[];\n  CCreatedBy = \"\";\n  constructor(public service: ContentCreatorServiceService, public toastr: ToastrService,\n  ) { }\n  ngOnInit() {\n    this.resetForm();\n    this.CCreatedBy = localStorage.getItem('uid');\n    this.service.retrieveSubjects().subscribe(res => {\n      this.Subjects = res as Subject[];\n    });\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n    this.service.formData = {\n      QuestionId: null,\n      QuestionStatement: \"\",\n      Option1: \"\",\n      Option2: \"\",\n      Option3: \"\",\n      Option4: \"\",\n      Answer: null,\n      Marks: null,\n      Difficulty: \"\",\n      SubjectId: \"\",\n    }\n  }\n  onSubmit(form: NgForm) {\n    this.service.postQuestion(form.value).subscribe(res => {\n      this.toastr.success('Inserted successfully');\n      this.resetForm(form);\n    });;\n  }\n}\n","module.exports = \".sidenav-container {\\n\\theight: 100%;\\n}\\n.sidenav-container a {\\n\\tcolor: white;\\n}\\n/* .sidenav-container a:focus {\\n\\tbackground-color: green !important;\\n}\\n.sidenav-container a:active {\\n\\tbackground-color: green !important;\\n} */\\n.sidenav-container a:hover,\\n.sidenav-container a:focus {\\n\\tbackground-color: red !important;\\n}\\n/* a:focus {\\n\\tbackground-color: red !important;\\n} */\\n.sidenav {\\n\\twidth: 250px;\\n\\tbackground-color: #021521;\\n}\\n.sidenav .mat-toolbar {\\n\\tbackground: inherit;\\n}\\n.mat-toolbar {\\n\\tbackground-color: #021521;\\n\\ttext-decoration: none;\\n\\tborder-bottom: .2px solid #030e13;\\n}\\n.mat-toolbar span {\\n\\tcolor: white;\\n}\\n.mat-list-item {\\n\\tmargin-top: 10px;\\n}\\n.log {\\n\\tfont-size: 15px;\\n\\tcursor: pointer;\\n\\tcolor: red !important;\\n}\\n.mat-toolbar.mat-primary {\\n\\tposition: -webkit-sticky;\\n\\tposition: sticky;\\n\\ttop: 0;\\n\\tz-index: 1;\\n}\\n.content {\\n\\tpadding: 30px 30px 0px 50px !important;\\n\\tmargin: 30px auto;\\n}\\n.mat-icon {\\n\\tcolor: white;\\n}\\n.spacer {\\n\\tflex: 1 1 auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC1jcmVhdG9yL21haW4tbmF2L21haW4tbmF2LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxZQUFZO0FBQ2I7QUFDQTtDQUNDLFlBQVk7QUFDYjtBQUNBOzs7OztHQUtHO0FBQ0g7O0NBRUMsZ0NBQWdDO0FBQ2pDO0FBQ0E7O0dBRUc7QUFFSDtDQUNDLFlBQVk7Q0FDWix5QkFBeUI7QUFDMUI7QUFFQTtDQUNDLG1CQUFtQjtBQUNwQjtBQUNBO0NBQ0MseUJBQXlCO0NBQ3pCLHFCQUFxQjtDQUNyQixpQ0FBaUM7QUFDbEM7QUFDQTtDQUNDLFlBQVk7QUFDYjtBQUNBO0NBQ0MsZ0JBQWdCO0FBQ2pCO0FBQ0E7Q0FDQyxlQUFlO0NBQ2YsZUFBZTtDQUNmLHFCQUFxQjtBQUN0QjtBQUNBO0NBQ0Msd0JBQWdCO0NBQWhCLGdCQUFnQjtDQUNoQixNQUFNO0NBQ04sVUFBVTtBQUNYO0FBQ0E7Q0FDQyxzQ0FBc0M7Q0FDdEMsaUJBQWlCO0FBQ2xCO0FBQ0E7Q0FDQyxZQUFZO0FBQ2I7QUFDQTtDQUNDLGNBQWM7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQtY3JlYXRvci9tYWluLW5hdi9tYWluLW5hdi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcblx0aGVpZ2h0OiAxMDAlO1xufVxuLnNpZGVuYXYtY29udGFpbmVyIGEge1xuXHRjb2xvcjogd2hpdGU7XG59XG4vKiAuc2lkZW5hdi1jb250YWluZXIgYTpmb2N1cyB7XG5cdGJhY2tncm91bmQtY29sb3I6IGdyZWVuICFpbXBvcnRhbnQ7XG59XG4uc2lkZW5hdi1jb250YWluZXIgYTphY3RpdmUge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbiAhaW1wb3J0YW50O1xufSAqL1xuLnNpZGVuYXYtY29udGFpbmVyIGE6aG92ZXIsXG4uc2lkZW5hdi1jb250YWluZXIgYTpmb2N1cyB7XG5cdGJhY2tncm91bmQtY29sb3I6IHJlZCAhaW1wb3J0YW50O1xufVxuLyogYTpmb2N1cyB7XG5cdGJhY2tncm91bmQtY29sb3I6IHJlZCAhaW1wb3J0YW50O1xufSAqL1xuXG4uc2lkZW5hdiB7XG5cdHdpZHRoOiAyNTBweDtcblx0YmFja2dyb3VuZC1jb2xvcjogIzAyMTUyMTtcbn1cblxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcblx0YmFja2dyb3VuZDogaW5oZXJpdDtcbn1cbi5tYXQtdG9vbGJhciB7XG5cdGJhY2tncm91bmQtY29sb3I6ICMwMjE1MjE7XG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0Ym9yZGVyLWJvdHRvbTogLjJweCBzb2xpZCAjMDMwZTEzO1xufVxuLm1hdC10b29sYmFyIHNwYW4ge1xuXHRjb2xvcjogd2hpdGU7XG59XG4ubWF0LWxpc3QtaXRlbSB7XG5cdG1hcmdpbi10b3A6IDEwcHg7XG59XG4ubG9nIHtcblx0Zm9udC1zaXplOiAxNXB4O1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGNvbG9yOiByZWQgIWltcG9ydGFudDtcbn1cbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSB7XG5cdHBvc2l0aW9uOiBzdGlja3k7XG5cdHRvcDogMDtcblx0ei1pbmRleDogMTtcbn1cbi5jb250ZW50IHtcblx0cGFkZGluZzogMzBweCAzMHB4IDBweCA1MHB4ICFpbXBvcnRhbnQ7XG5cdG1hcmdpbjogMzBweCBhdXRvO1xufVxuLm1hdC1pY29uIHtcblx0Y29sb3I6IHdoaXRlO1xufVxuLnNwYWNlciB7XG5cdGZsZXg6IDEgMSBhdXRvO1xufVxuIl19 */\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\"\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar><a mat-list-item routerLink=\\\"/cc-dash\\\">Dashboard</a></mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item routerLink=\\\"/create-question\\\">Create Question</a>\\n      <a mat-list-item routerLink=\\\"/quiz\\\">Create/Retrieve Quiz</a>\\n      <a mat-list-item routerLink=\\\"/tag\\\">Create / Edit Tag</a>\\n      <a mat-list-item routerLink=\\\"/rqbank\\\">Questions Created</a>\\n      <a mat-list-item routerLink=\\\"/archive-quiz\\\">Archive Quizes</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar>\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Content Creator</span>\\n      <span class=\\\"spacer\\\"></span>\\n      <a class= \\\"log\\\"(click)=\\\"logout()\\\" >Log Out</a>\\n    </mat-toolbar>\\n    <div class=\\\"content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from 'angularx-social-login';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-main-nav',\n\ttemplateUrl: './main-nav.component.html',\n\tstyleUrls: ['./main-nav.component.css']\n})\nexport class MainNavComponent {\n\tisHandset$: Observable<boolean> = this.breakpointObserver\n\t\t.observe(Breakpoints.Handset)\n\t\t.pipe(map((result) => result.matches));\n\n\tconstructor(\n\t\tprivate breakpointObserver: BreakpointObserver,\n\t\tprivate authService: AuthService,\n\t\tprivate router: Router\n\t) { }\n\tVal: string[];\n\tngOnInit() {\n\t\tif (localStorage.getItem('id') === null) {\n\t\t\tthis.router.navigate(['/login']);\n\t\t}\n\t\tthis.authService.authState.subscribe((user) => {\n\t\t\tif (user != null) {\n\t\t\t\t//\tconsole.log(user);\n\t\t\t} else {\n\t\t\t\tlocalStorage.clear();\n\t\t\t\tthis.router.navigate(['/login']);\n\t\t\t}\n\t\t});\n\t}\n\tOpen(link) {\n\t\tthis.Val = link;\n\t\tconsole.log(this.Val);\n\t}\n\tlogout() {\n\t\tlocalStorage.clear();\n\t\tthis.authService.signOut();\n\t}\n\t// clicked() {\n\t// \tconsole.log('clicked');\n\t// \tdocument.getElementById('clk').style.backgroundColor = 'red';\n\t// }\n}\n","module.exports = \"th,\\ntd {\\n\\ttext-align: center;\\n\\tcolor: black;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC1jcmVhdG9yL3JldHJpZXZlLXF1ZXN0aW9uLWJhbmsvcmV0cmlldmUtcXVlc3Rpb24tYmFuay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztDQUVDLGtCQUFrQjtDQUNsQixZQUFZO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9jb250ZW50LWNyZWF0b3IvcmV0cmlldmUtcXVlc3Rpb24tYmFuay9yZXRyaWV2ZS1xdWVzdGlvbi1iYW5rLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0aCxcbnRkIHtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRjb2xvcjogYmxhY2s7XG59XG4iXX0= */\"","module.exports = \"<app-main-nav>\\n\\n<div class=\\\"row\\\">\\n  <div>\\n    <input style=\\\"margin-left: 5%; width: 40rem\\\" #searchField class=\\\"form-control mr-sm-2 border border-secondary\\\"\\n      placeholder=\\\"Filter..\\\" aria-label=\\\"Filter\\\" #searchInput=\\\"ngModel\\\" [(ngModel)]=\\\"searchText\\\">\\n  </div>\\n  <div>\\n    <select (change)=\\\"filterSubject($event)\\\" #dropdown style=\\\"margin-left :40%\\\"\\n      class=\\\"form-control border border-secondary\\\">\\n      <option selected value>Choose Difficulty Level</option>\\n      <option value=\\\"Beginner\\\">Beginner</option>\\n      <option value=\\\"Intermediate\\\">Intermediate</option>\\n      <option value=\\\"Advanced\\\">Advanced</option>\\n    </select>\\n  </div>\\n</div>\\n<br /><br />\\n<table class=\\\"table table-bordered table-striped\\\">\\n  <thead class=\\\"thead-dark\\\">\\n    <th scope=\\\"col\\\">#Question ID</th>\\n    <th scope=\\\"col\\\">Question</th>\\n    <th scope=\\\"col\\\">Subject</th>\\n    <th scope=\\\"col\\\">Difficulty Level</th>\\n    <th scope=\\\"col\\\">Action</th>\\n\\n  </thead>\\n\\n  <tbody>\\n    <ng-container *ngFor=\\\"let ques of questionList;index as i;\\\">\\n      <tr *ngIf=\\\"(filter(ques))\\\"  style=\\\"color:azure\\\">\\n        <th (click)=\\\"viewUserQues(ques.QuestionId,i+1)\\\" scope=\\\"row\\\">{{i+1}}</th>\\n        <td (click)=\\\"viewUserQues(ques.QuestionId,i+1)\\\" scope=\\\"row\\\">{{ques.QuestionStatement}}</td>\\n        <td (click)=\\\"viewUserQues(ques.QuestionId,i+1)\\\" scope=\\\"row\\\">{{ques.SubjectName}}</td>\\n        <td (click)=\\\"viewUserQues(ques.QuestionId,i+1)\\\" scope=\\\"row\\\">{{ques.Difficulty}}</td>\\n        <td>\\n          <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"editUserQues(ques.QuestionId,i+1)\\\"><i\\n              class=\\\"fa fa-pencil\\\"></i></a>\\n          <a class=\\\"btn btn-sm btn-danger text-white ml-1\\\" (click)=\\\"deleteQues(ques.QuestionId)\\\"><i\\n              class=\\\"fa fa-trash\\\"></i></a>\\n        </td>\\n\\n      </tr>\\n    </ng-container>\\n  </tbody>\\n</table>\\n</app-main-nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { Question } from '../shared/question.model';\nimport { ContentCreatorServiceService } from '../shared/content-creator-service.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { UpdateQuestionComponent } from '../update-question/update-question.component';\nimport { concat } from 'rxjs';\n\n@Component({\n\tselector: 'app-retrieve-question-bank',\n\ttemplateUrl: './retrieve-question-bank.component.html',\n\tstyleUrls: ['./retrieve-question-bank.component.css']\n})\nexport class RetrieveQuestionBankComponent implements OnInit {\n\tquestionList: Question[];\n\tsearchText = '';\n\tdifficultyLevel = '';\n\n\tconstructor(private service: ContentCreatorServiceService,\n\t\tprivate toastr: ToastrService,\n\t\tprivate dialog: MatDialog) { }\n\n\tngOnInit() {\n\t\tthis.getQuesOfUser(localStorage.getItem('uid'));\n\t}\n\tfilter(ques: Question) {\n\t\tconsole.log(this.difficultyLevel);\n\t\tconsole.log(ques.Difficulty);\n\t\treturn (\n\t\t\t(ques.QuestionStatement.toLowerCase().indexOf(this.searchText.toLowerCase()) > -1\n\t\t\t|| ques.SubjectName.toLowerCase().indexOf(this.searchText.toLowerCase()) > -1)\n\t\t\t&& ques.Difficulty.toLowerCase().indexOf(this.difficultyLevel.toLowerCase()) > -1\n\t\t);\n\t}\n\tfilterSubject(event: any) {\n\t\tthis.difficultyLevel = event.target.value;\n\t\tconsole.log(this.difficultyLevel);\n\t}\n\n\tgetQuesOfUser(uid: string) {\n\t\tthis.service.getQuesOfUser(uid).subscribe((data: any) => {\n\t\t\tthis.questionList = data as Question[];\n\t\t\tconsole.log(this.questionList);\n\t\t})\n\t}\n\tdeleteQues(qid) {\n\t\tthis.service.deleteQues(qid).subscribe((res: any) => {\n\t\t\tthis.toastr.success('Deleted Successfully', 'Assesment System');\n\t\t\tthis.getQuesOfUser(localStorage.getItem('uid'));\n\t\t});\n\t}\n\teditUserQues(quesid: number, arrayindex: number) {\n\t\tconst dialogConfig = new MatDialogConfig();\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"70%\";\n\t\tdialogConfig.disableClose = true;\n\t\tthis.service.readonlyStatus = false;\n\t\tthis.service.formData = this.questionList[arrayindex - 1];\n\t\tthis.dialog.open(UpdateQuestionComponent, dialogConfig).afterClosed().subscribe((res: any) => {\n\t\t\tconsole.log(res);\n\t\t\tthis.getQuesOfUser(localStorage.getItem('uid'));\n\t\t});\n\n\t}\n\tviewUserQues(quesid: number, arrayindex: number) {\n\t\tconst dialogConfig = new MatDialogConfig();\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"70%\";\n\t\tdialogConfig.disableClose = true;\n\t\tthis.service.readonlyStatus = true;\n\t\tthis.service.formData = this.questionList[arrayindex - 1];\n\t\tthis.dialog.open(UpdateQuestionComponent, dialogConfig).afterClosed().subscribe((res: any) => {\n\t\t});\n\n\t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQtY3JlYXRvci9yZXRyaWV2ZS1xdWl6L2FkZC1xdWVzLWluLXF1aXovYWRkLXF1ZXMtaW4tcXVpei5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card-body\\\">\\n  <h5 class=\\\"card-title\\\" style=\\\"text-align: center\\\">Choose Questions</h5><br>\\n  <form #Questionform=\\\"ngForm\\\" (submit)=\\\"onDetailsSubmit(Questionform)\\\" autocomplete=\\\"off\\\">\\n    <div *ngFor=\\\"let x of questions; let i = index\\\"><br>\\n      <input [id]=\\\"'questions-'+i\\\" type=\\\"checkbox\\\" value=\\\"{{x.Question_ID}}\\\" [checked]=\\\"x.selected\\\"\\n        (change)=\\\"updateSelectedQuestions(i)\\\">\\n      <label>{{x.QuestionStatement}}</label>\\n    </div>\\n    <button style=\\\"margin-left:5%; margin-right: 5%\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-danger\\\" [mat-dialog-close]> Close</button>\\n  </form>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Subject } from '../../shared/subject.model';\nimport { ContentCreatorServiceService } from '../../shared/content-creator-service.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialogRef, MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-ques-in-quiz',\n  templateUrl: './add-ques-in-quiz.component.html',\n  styleUrls: ['./add-ques-in-quiz.component.css']\n})\nexport class AddQuesInQuizComponent implements OnInit {\n\n  public Subjects: Subject[];\n  questions: any[];\n  val: Boolean = false;\n  count: number = 0;\n  CDifficulty = \"\";\n  CSubjectID = null;\n  label:'';\n  constructor(@Inject(MAT_DIALOG_DATA) public data, \n    public service: ContentCreatorServiceService, \n    public toastr: ToastrService,\n    public dialog: MatDialog,\n    private dialogref: MatDialogRef<AddQuesInQuizComponent>) { }\n  ngOnInit() {\n    this.questions = this.data;\n    console.log(this.questions);\n    this.resetForm();\n  }\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n    else {\n      this.service.quizForm = {\n        QuizId: null,\n        Difficulty: '',\n        TotalQuestions: null,\n        TotalMarks: null,\n        Subject: '',\n        QuizType: '',\n        CreatedBy: '',\n        QuestionIds: null,\n        SubjectId: null,\n        QuizName:''\n      }\n      if (this.questions) {\n        this.questions.map(y => y.selected = false);\n      }\n    }\n  }\n  updateSelectedQuestions(index) {\n    this.questions[index].selected = !this.questions[index].selected;\n  }\n\n  onDetailsSubmit(form: NgForm) {\n    var QuestionId = this.questions.filter(QuestionId => QuestionId.selected).map(idSelected => idSelected.QuestionId);\n    console.log(QuestionId);\n    this.service.putQuestionsSelected(QuestionId).subscribe(res => {\n      this.toastr.success('Inserted successfully');\n    })    \n   // this.dialogref.close();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQtY3JlYXRvci9yZXRyaWV2ZS1xdWl6L2FyY2hpdmUtcXVpei9hcmNoaXZlLXF1aXouY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-main-nav>\\n<div>\\n  <br/><br/><br/>\\n  <h1 style=\\\"text-align: center\\\">List of Archived Quizzes</h1>\\n  <div class=\\\"row\\\">\\n    <div>\\n      <input style=\\\"margin-left: 5%; width: 40rem\\\" #searchField class=\\\"form-control mr-sm-2 border border-secondary\\\"\\n        placeholder=\\\"Filter..\\\" aria-label=\\\"Filter\\\" #searchInput=\\\"ngModel\\\" [(ngModel)]=\\\"searchText\\\">\\n    </div>\\n    <div>\\n      <select (change)=\\\"filterSubject($event)\\\" #dropdown style=\\\"margin-left :40%\\\" class=\\\"form-control border border-secondary\\\">\\n        <option  selected value>Choose Difficulty Level</option>\\n        <option value=\\\"Beginner\\\">Beginner</option>\\n        <option value=\\\"Intermediate\\\">Intermediate</option>\\n        <option value=\\\"Advanced\\\">Advanced</option>\\n      </select>\\n    </div>\\n  </div>\\n  <br /><br />\\n  <table class=\\\"table table-bordered table-striped\\\">\\n    <thead class=\\\"thead-dark\\\">\\n      <th scope=\\\"col\\\">#Quiz ID</th>\\n      <th scope=\\\"col\\\">Quiz Type</th>\\n      <th scope=\\\"col\\\">Difficulty</th>\\n      <th scope=\\\"col\\\">Subject</th>\\n      <th scope=\\\"col\\\">Total Questions</th>\\n      <th scope=\\\"col\\\">Total Marks</th>\\n      <th scope=\\\"col\\\">Action</th>\\n    </thead>\\n  \\n    <tbody>\\n      <ng-container *ngFor=\\\"let item of QuizList;index as i\\\">\\n        <tr *ngIf=\\\"(filter(item))\\\">\\n          <th class=\\\"text-primary\\\" scope=\\\"row\\\">{{i+1}}</th>\\n          <td class=\\\"text-primary\\\" scope=\\\"row\\\">{{item.QuizType}}</td>\\n          <td class=\\\"text-primary\\\" scope=\\\"row\\\">{{item.Difficulty}}</td>\\n          <td class=\\\"text-primary\\\" scope=\\\"row\\\">{{item.Subject}}</td>\\n          <td class=\\\"text-primary\\\" scope=\\\"row\\\">{{item.TotalQuestions}}</td>\\n          <td class=\\\"text-primary\\\" scope=\\\"row\\\">{{item.TotalMarks}}</td>\\n          <td>\\n            <a class=\\\"btn text-danger\\\" (click)=\\\"onUnArchived(item.QuizId)\\\"><i class=\\\"fa fa-file-archive-o\\\"></i></a>\\n          </td>\\n        </tr>\\n      </ng-container>\\n    </tbody>\\n  </table>\\n  </div>\\n</app-main-nav>\"","import { Component, OnInit } from '@angular/core';\nimport { QuizModel } from '../../shared/quiz.model';\nimport { ContentCreatorServiceService } from '../../shared/content-creator-service.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-archive-quiz',\n  templateUrl: './archive-quiz.component.html',\n  styleUrls: ['./archive-quiz.component.css']\n})\nexport class ArchiveQuizComponent implements OnInit {\n  QuizList: QuizModel[];\n\tsearchText = '';\n\tdifficultyLevel = '';\n\tindex = 0;\n\tQuestionList: any[];\n\tconstructor(private service: ContentCreatorServiceService,\n\t\tprivate toastr: ToastrService) { }\n\n\tpublic ngOnInit() {\n\t\tthis.loadQuiz();\n\t}\n\tloadQuiz() {\n\t\tthis.service.getArchivedQuizzes().subscribe((res: any) => {\n\t\t\tthis.QuizList = res as QuizModel[];\n\t\t});\n\t}\n\tfilter(item: QuizModel) {\n\t\treturn (\n\t\t\t(item.Subject.toLowerCase().indexOf(this.searchText.toLowerCase()) > -1\n\t\t\t\t|| item.QuizType.toLowerCase().indexOf(this.searchText.toLowerCase()) > -1)\n\t\t\t&& item.Difficulty.toLowerCase().indexOf(this.difficultyLevel.toLowerCase()) > -1\n\t\t);\n\t}\n\n\tfilterSubject(event: any) {\n\t\tthis.difficultyLevel = event.target.value;\n\t\tconsole.log(this.difficultyLevel);\n\t}\n\n\tonUnArchived(id: number) {\n\t\tconsole.log(id);\n\t\tif (confirm('Are you sure you want to un-archive this quiz?')) {\n\t\t\tthis.service.unArchiveQuiz(id).subscribe((res: any) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tthis.loadQuiz();\n\t\t\t\tthis.toastr.success('Un-Archived Successfully', 'Assesment System');\n\t\t\t});\n\t\t}\n\t}\n\n}\n","module.exports = \".card {\\n\\tmargin: 9px auto;\\n}\\n.container {\\n\\tmax-width: inherit;\\n\\tmax-height: inherit;\\n}\\nbutton {\\n\\tmargin-left: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC1jcmVhdG9yL3JldHJpZXZlLXF1aXovY3JlYXRlLXF1aXovY3JlYXRlLXF1aXouY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGdCQUFnQjtBQUNqQjtBQUNBO0NBQ0Msa0JBQWtCO0NBQ2xCLG1CQUFtQjtBQUNwQjtBQUNBO0NBQ0MsaUJBQWlCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29udGVudC1jcmVhdG9yL3JldHJpZXZlLXF1aXovY3JlYXRlLXF1aXovY3JlYXRlLXF1aXouY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcblx0bWFyZ2luOiA5cHggYXV0bztcbn1cbi5jb250YWluZXIge1xuXHRtYXgtd2lkdGg6IGluaGVyaXQ7XG5cdG1heC1oZWlnaHQ6IGluaGVyaXQ7XG59XG5idXR0b24ge1xuXHRtYXJnaW4tbGVmdDogMTBweDtcbn1cbiJdfQ== */\"","module.exports = \"<mat-dialog-content>\\n  <div class=\\\"card\\\" style=\\\"width: 80%; overflow: auto\\\">\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\" style=\\\"text-align: center\\\">Create A Quiz</h5><br><br>\\n      <ng-container *ngIf=\\\"!val\\\">\\n        <form #form=\\\"ngForm\\\" (submit)=\\\"fetchReqQues(form)\\\" autocomplete=\\\"off\\\">\\n          <input type=\\\"hidden\\\" name=\\\"CreatedBy\\\" #CreatedBy=\\\"ngModel\\\" [(ngModel)]=\\\"CCreatedBy\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Select Difficulty-Level</label>\\n              <select name=\\\"Difficulty\\\" required #Difficulty=\\\"ngModel\\\" [(ngModel)]=\\\"service.quizForm.Difficulty\\\"\\n                class=\\\"form-control\\\">\\n                <option value=\\\"Beginner\\\">Easy</option>\\n                <option value=\\\"Intermediate\\\">Medium</option>\\n                <option value=\\\"Advanced\\\">Hard</option>\\n              </select>\\n              <div class=\\\"validation-error\\\" *ngIf=\\\"Difficulty.invalid && Difficulty.touched\\\">This field is required.\\n              </div>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Select Subject</label>\\n              <select name=\\\"SubjectId\\\" required #SubjectId=\\\"ngModel\\\" [(ngModel)]=\\\"service.quizForm.SubjectId\\\"\\n                class=\\\"form-control\\\">\\n                <option *ngFor=\\\"let Subject of Subjects;\\\" value=\\\"{{Subject.SubjectId}}\\\">{{Subject.Name}}</option>\\n              </select>\\n\\n              <div class=\\\"validation-error\\\" *ngIf=\\\"SubjectId.invalid && SubjectId.touched\\\">This field is required.</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label>Quiz Name</label>\\n              <input type=\\\"text\\\" required name=\\\"QuizName\\\" #QuizName=\\\"ngModel\\\" [(ngModel)]=\\\"service.quizForm.QuizName\\\">\\n              <div class=\\\"validation-error\\\" *ngIf=\\\"QuizName.invalid && QuizName.touched\\\">This field is required.</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary \\\">Click</button>\\n            <button type=\\\"button\\\" [mat-dialog-close] class=\\\"btn btn-danger\\\">Close</button>\\n          </div>\\n        </form>\\n      </ng-container>\\n      <div *ngIf=\\\"val\\\">\\n        <div class=\\\"card-body\\\">\\n\\n          <h5 *ngIf=\\\"length>0\\\" class=\\\"card-title\\\" style=\\\"text-align: center\\\">Choose Questions</h5><br><br>\\n          <h5 *ngIf=\\\"length==0\\\" class=\\\"card-title\\\" style=\\\"text-align: center\\\">No Question Available</h5><br><br>\\n          <form #Questionform=\\\"ngForm\\\" (submit)=\\\"onDetailsSubmit(Questionform)\\\" autocomplete=\\\"off\\\">\\n            <div *ngFor=\\\"let x of questions; let i = index\\\"><br>\\n              <input [id]=\\\"'questions-'+i\\\" type=\\\"checkbox\\\" value=\\\"{{x.Question_ID}}\\\" [checked]=\\\"x.selected\\\"\\n                (change)=\\\"updateSelectedQuestions(i)\\\">\\n              <label>{{x.QuestionStatement}}</label>\\n            </div>\\n            <div *ngIf=\\\"length==0\\\">\\n              <a routerLink='/create-question' routerLinkActive='active'>Click Here to Create Question</a>\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"button\\\" [mat-dialog-close] class=\\\"btn btn-danger\\\">Close</button>\\n            <!-- </div> -->\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</mat-dialog-content>\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ContentCreatorServiceService } from '../../shared/content-creator-service.service';\nimport { Subject } from 'src/app/content-creator/shared/subject.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { Question } from 'src/app/content-creator/shared/question.model';\n\n@Component({\n  selector: 'app-create-quiz',\n  templateUrl: './create-quiz.component.html',\n  styleUrls: ['./create-quiz.component.css']\n})\nexport class CreateQuizComponent implements OnInit {\n  public Subjects: Subject[];\n  questions: any[];\n  val: Boolean = false;\n  count: number = 0;\n  CCreatedBy = \"\";\n  length = 0;\n  constructor(private service: ContentCreatorServiceService, public toastr: ToastrService) { }\n  ngOnInit() {\n    this.resetForm();\n    this.CCreatedBy = localStorage.getItem('uid');\n    this.service.retrieveSubjects().subscribe(data => {\n      this.Subjects = data as Subject[];\n      console.log(this.Subjects);\n    });\n  }\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n    else {\n      this.service.quizForm = {\n        QuizId: null,\n        Difficulty: '',\n        TotalQuestions: null,\n        TotalMarks: null,\n        Subject: '',\n        QuizType: '',\n        CreatedBy: '',\n        QuestionIds: null,\n        SubjectId: null,\n        QuizName:''\n      }\n      if (this.questions) {\n        this.questions.map(y => y.selected = false);\n      }\n    }\n  }\n  fetchReqQues(form: NgForm) {\n    console.log(form.value);\n    this.service.quizForm = form.value;\n    this.service.getQuesOfUserConstraints(form.value).subscribe((data: any) => {\n      data.forEach(obj => obj.selected = false);\n      this.questions = data;\n      this.length = this.questions.length;\n      console.log(this.questions);\n      this.checkVal();\n    });\n  }\n  checkVal() {\n    this.val = true;\n  }\n  updateSelectedQuestions(index) {\n    this.questions[index].selected = !this.questions[index].selected;\n  }\n\n  onDetailsSubmit(form: NgForm) {\n    var QuestionId = this.questions.filter(QuestionId => QuestionId.selected).map(idSelected => idSelected.QuestionId);\n    console.log(QuestionId);\n    this.service.postQuestionsSelected(QuestionId).subscribe(res => {\n      this.toastr.success('Inserted successfully');\n    })\n  }\n}","module.exports = \"th,\\ntd {\\n\\ttext-align: center;\\n\\tcolor: black;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC1jcmVhdG9yL3JldHJpZXZlLXF1aXovcmV0cmlldmUtcXVpei5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztDQUVDLGtCQUFrQjtDQUNsQixZQUFZO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9jb250ZW50LWNyZWF0b3IvcmV0cmlldmUtcXVpei9yZXRyaWV2ZS1xdWl6LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0aCxcbnRkIHtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRjb2xvcjogYmxhY2s7XG59XG4iXX0= */\"","module.exports = \"<app-main-nav>\\n  <div>\\n    <h1 style=\\\"text-align: center\\\">List of Quizzes</h1>\\n    <button type=\\\"button\\\" (click)=\\\"onCreate()\\\" class=\\\"btn btn-primary\\\">Create Quiz</button>\\n    <br /><br /><br />\\n    <div class=\\\"row\\\">\\n      <div>\\n        <input style=\\\"margin-left: 5%; width: 40rem\\\" #searchField class=\\\"form-control mr-sm-2 border border-secondary\\\"\\n          placeholder=\\\"Filter..\\\" aria-label=\\\"Filter\\\" #searchInput=\\\"ngModel\\\" [(ngModel)]=\\\"searchText\\\">\\n      </div>\\n      <div>\\n        <select (change)=\\\"filterSubject($event)\\\" #dropdown style=\\\"margin-left :40%\\\"\\n          class=\\\"form-control border border-secondary\\\">\\n          <option selected value>Choose Difficulty Level</option>\\n          <option value=\\\"Beginner\\\">Beginner</option>\\n          <option value=\\\"Intermediate\\\">Intermediate</option>\\n          <option value=\\\"Advanced\\\">Advanced</option>\\n        </select>\\n      </div>\\n    </div>\\n    <br /><br />\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead class=\\\"thead-dark\\\">\\n        <th scope=\\\"col\\\">#Quiz ID</th>\\n        <th scope=\\\"col\\\">Quiz Type</th>\\n        <th scope=\\\"col\\\">Difficulty</th>\\n        <th scope=\\\"col\\\">Subject</th>\\n        <th scope=\\\"col\\\">Total Questions</th>\\n        <th scope=\\\"col\\\">Total Marks</th>\\n        <th scope=\\\"col\\\">Action</th>\\n      </thead>\\n  \\n      <tbody>\\n        <ng-container *ngFor=\\\"let item of QuizList;index as i\\\">\\n          <tr *ngIf=\\\"(filter(item))\\\">\\n            <th scope=\\\"row\\\">{{i+1}}</th>\\n            <td scope=\\\"row\\\">{{item.QuizType}}</td>\\n            <td scope=\\\"row\\\">{{item.Difficulty}}</td>\\n            <td scope=\\\"row\\\">{{item.Subject}}</td>\\n            <td scope=\\\"row\\\">{{item.TotalQuestions}}</td>\\n            <td scope=\\\"row\\\">{{item.TotalMarks}}</td>\\n            <td>\\n              <a class=\\\"btn text-danger\\\" (click)=\\\"onEdit(item.QuizId)\\\"><i class=\\\"fa fa-edit fa-lg\\\"></i></a>\\n              <a class=\\\"btn text-danger\\\" (click)=\\\"onArchive(item.QuizId)\\\"><i class=\\\"fa fa-trash fa-lg\\\"></i></a>\\n            </td>\\n          </tr>\\n        </ng-container>\\n      </tbody>\\n    </table>\\n  </div>\\n</app-main-nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TagModel } from '../shared/tags.model';\nimport { ContentCreatorServiceService } from '../shared/content-creator-service.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\nimport { QuizModel } from '../shared/quiz.model';\nimport { CreateQuizComponent } from './create-quiz/create-quiz.component';\nimport { UpdateQuizComponent } from './update-quiz/update-quiz.component';\n\n@Component({\n\tselector: 'retrieve-quiz',\n\ttemplateUrl: './retrieve-quiz.component.html',\n\tstyleUrls: ['./retrieve-quiz.component.css']\n})\nexport class RetrieveQuizComponent implements OnInit {\n\tQuizList: QuizModel[];\n\tsearchText = '';\n\tdifficultyLevel = '';\n\tindex = 0;\n\tQuestionList: any[];\n\tconstructor(private service: ContentCreatorServiceService,\n\t\tprivate router: Router,\n\t\tprivate dialog: MatDialog,\n\t\tprivate toastr: ToastrService) { }\n\n\tngOnInit() {\n\t\tthis.loadQuiz();\n\t}\n\tloadQuiz() {\n\t\tthis.service.getQuizzes().subscribe((res: any) => {\n\t\t\tthis.QuizList = res as QuizModel[];\n\t\t});\n\t}\n\tfilter(item: QuizModel) {\n\t\treturn (\n\t\t\t(item.Subject.toLowerCase().indexOf(this.searchText.toLowerCase()) > -1\n\t\t\t\t|| item.QuizType.toLowerCase().indexOf(this.searchText.toLowerCase()) > -1)\n\t\t\t&& item.Difficulty.toLowerCase().indexOf(this.difficultyLevel.toLowerCase()) > -1\n\t\t);\n\t}\n\tfilterSubject(event: any) {\n\t\tthis.difficultyLevel = event.target.value;\n\t\tconsole.log(this.difficultyLevel);\n\t}\n\tonCreate() {\n\t\tconst dialogConfig = new MatDialogConfig();\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"70%\";\n\t\tdialogConfig.disableClose = true;\n\t\tlet dialogRef = this.dialog.open(CreateQuizComponent, dialogConfig);\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tthis.loadQuiz();\n\t\t});\n\t}\n\n\tonArchive(id: number) {\n\t\tconsole.log(id);\n\t\tif (confirm('Are you sure you want to delete this quiz?')) {\n\t\t\tthis.service.deleteQuiz(id).subscribe((res: any) => {\n\t\t\t\tthis.loadQuiz();\n\t\t\t\tthis.toastr.success('Archieved Successfully', 'Assesment System');\n\t\t\t});\n\t\t}\n\t}\n\tonEdit(id: number) {\n\t\tlocalStorage.setItem('quizId', id.toString());\n\t\tthis.service.getQuestionsByQuiz(id).subscribe((res: any) => {\n\t\t\tthis.QuestionList = res as any[];\n\t\t\tconst dialogConfig = new MatDialogConfig();\n\t\t\tdialogConfig.autoFocus = true;\n\t\t\tdialogConfig.width = \"70%\";\n\t\t\tdialogConfig.disableClose = true;\n\t\t\tdialogConfig.data = this.QuestionList;\n\t\t\tconsole.log(dialogConfig.data);\n\t\t\tthis.dialog.open(UpdateQuizComponent, dialogConfig).afterClosed().subscribe(res => {\n\t\t\t\tthis.loadQuiz();\n\t\t\t\tlocalStorage.removeItem('quizId');\n\t\t\t});\n\t\t});\n\n\t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQtY3JlYXRvci9yZXRyaWV2ZS1xdWl6L3VwZGF0ZS1xdWl6L3VwZGF0ZS1xdWl6LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-dialog-content>\\n  <button type=\\\"button\\\" (click)=\\\"onCreate()\\\" class=\\\"btn btn-primary\\\">Add Question</button>\\n  <div>\\n    <br /><br />\\n    <h1 style=\\\"text-align: center\\\">View Quiz Details</h1>\\n    <br />\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead class=\\\"thead-dark\\\">\\n        <th scope=\\\"col\\\">#Question ID</th>\\n        <th scope=\\\"col\\\">Question</th>\\n        <th scope=\\\"col\\\">Marks</th>\\n        <th scope=\\\"col\\\">Action</th>\\n      </thead>\\n\\n      <tbody>\\n        <ng-container *ngFor=\\\"let item of UpdateQuizQuestionList;index as i\\\">\\n          <tr>\\n            <th class=\\\"text-primary\\\" scope=\\\"row\\\">{{i+1}}</th>\\n            <th class=\\\"text-primary\\\" scope=\\\"row\\\">{{item.QuestionStatement}}</th>\\n            <td class=\\\"text-primary\\\" scope=\\\"row\\\">{{item.Marks}}</td>\\n            <td>\\n              <a class=\\\"btn text-danger\\\" (click)=\\\"onDelete(item.QuestionId)\\\"><i class=\\\"fa fa-trash fa-lg\\\"></i></a>\\n            </td>\\n          </tr>\\n        </ng-container>\\n      </tbody>\\n    </table>\\n  </div>\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-danger\\\" [mat-dialog-close]> Close</button>\\n</mat-dialog-content>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogConfig, MatDialog } from '@angular/material/dialog';\nimport { ContentCreatorServiceService } from '../../shared/content-creator-service.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Question } from '../../shared/question.model';\n// import { CreateQuestionsComponent } from '../../retrieve-question-bank/create-questions/create-questions.component';\n// import { CreateQuizComponent } from '../create-quiz/create-quiz.component';\nimport { AddQuesInQuizComponent } from '../add-ques-in-quiz/add-ques-in-quiz.component';\n\n@Component({\n  selector: 'app-update-quiz',\n  templateUrl: './update-quiz.component.html',\n  styleUrls: ['./update-quiz.component.css']\n})\nexport class UpdateQuizComponent implements OnInit {\n  UpdateQuizQuestionList: Question[];\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef: MatDialogRef<UpdateQuizComponent>,\n    public service: ContentCreatorServiceService,\n    public toastr: ToastrService,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.UpdateQuizQuestionList = this.data;\n  }\n\n  loadingData() {\n    this.service.getQuestionsByQuiz(Number(localStorage.getItem('quizId'))).subscribe((res: any) => {\n      this.UpdateQuizQuestionList = res;\n    });\n  }\n\n  onDelete(id: number) {\n    console.log(id);\n    this.service.deleteQuesOfQuiz(id).subscribe((res: any) => {\n      this.toastr.success('Deleted Successfully', 'Assesment System');\n      this.loadingData();\n    });\n  }\n\n  onCreate() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"70%\";\n    dialogConfig.disableClose = true;\n    this.service.getQuizQuestions(Number(localStorage.getItem('quizId'))).subscribe((res: any) => {\n      dialogConfig.data = res;\n      console.log(dialogConfig.data);\n      this.dialog.open(AddQuesInQuizComponent, dialogConfig).afterClosed().subscribe(res => {\n        this.loadingData();\n      });\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Question } from '../shared/question.model';\nimport { environment } from 'src/environments/environment';\nimport { TagModel } from './tags.model';\nimport { QuizModel } from './quiz.model';\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ContentCreatorServiceService {\n\ttagForm: TagModel;\n\tformData: Question;\n\tquizForm: QuizModel;\n\treadonlyStatus: boolean;\n\trootURL = environment.apiURl;\n\tpublic createdBy;\n\tconstructor(private http: HttpClient) { }\n\tpostQuestion(formData: Question) {\n\t\tconsole.log(formData);\n\t\treturn this.http.post(this.rootURL + 'Question/CreateQuestion', formData);\n\t}\n\tupdateQuestion(formData: Question) {\n\t\tconsole.log(formData);\n\t\treturn this.http.put(this.rootURL + 'Question/Edit/' + formData.QuestionId, formData);\n\t}\n\tretrieveSubjects() {\n\t\treturn this.http.get(this.rootURL + 'Subject/GetSubjects');\n\t}\n\tgetQuesOfUser(uid: string) {\n\t\treturn this.http.get(this.rootURL + 'Question/GetQuestionByUser/' + localStorage.getItem('uid'));\n\t}\n\tdeleteQues(qid) {\n\t\tconsole.log(qid);\n\t\treturn this.http.delete(this.rootURL + '/Question/Delete/' + qid);\n\t}\n\tgetArchivedQuizzes() {\n\t\treturn this.http.get(this.rootURL + 'Quiz/Archived/' + localStorage.getItem('uid'));\n\t}\n\tunArchiveQuiz(id: number) {\n\t\tconsole.log(id);\n\t\treturn this.http.put(this.rootURL + '/Quiz/UnArchive', id);\n\t}\n\n\tgetTags() {\n\t\treturn this.http.get(this.rootURL + 'Subject/GetSubjects/' + localStorage.getItem('uid'));\n\t}\n\tpostTags(tagForm: TagModel) {\n\t\tconsole.log(tagForm);\n\t\tif (tagForm.SubjectId === null) {\n\t\t\treturn this.http.post(this.rootURL + 'Subject/CreateSubject', tagForm);\n\t\t} else {\n\t\t\treturn this.http.put(this.rootURL + 'Subject/Edit/' + tagForm.SubjectId, tagForm);\n\t\t}\n\t}\n\tdeleteTags(id: number) {\n\t\treturn this.http.delete(this.rootURL + '/Tag/Delete/' + id);\n\t}\n\tgetQuizzes() {\n\t\treturn this.http.get(this.rootURL + 'Quiz/GetQuiz/' + localStorage.getItem('uid'));\n\t}\n\tdeleteQuiz(id: number) {\n\t\treturn this.http.delete(this.rootURL + '/Quiz/Delete/' + id);\n\t}\n\n\tgetQuesOfUserConstraints(form: any) {\n\t\treturn this.http.get(this.rootURL + 'Question/GetQuestion/' + form.Difficulty + '/' + form.SubjectId);\n\t}\n\tpostQuestionsSelected(questions: number[]) {\n\t\tthis.quizForm.QuestionIds = questions;\n\t\tconsole.log(this.quizForm);\n\t\treturn this.http.post(this.rootURL + 'Quiz/CreateQuiz', this.quizForm);\n\t}\n\t// pulkit's methods\n\tputQuestionsSelected(questions: number[]) {\n\t\tthis.quizForm.QuestionIds = questions;\n\t\tthis.quizForm.CreatedBy = localStorage.getItem('uid');\n\t\tconsole.log(this.quizForm.QuestionIds);\n\t\treturn this.http.put(this.rootURL + 'Quiz/EditQuiz/AddQuestion/' + Number(localStorage.getItem('quizId')), this.quizForm.QuestionIds);\n\t}\n\tdeleteQuesOfQuiz(id) {\n\t\tconsole.log(id);\n\t\treturn this.http.delete(\n\t\t\tthis.rootURL + 'Quiz/QuizQuestion/Delete/' + Number(localStorage.getItem('quizId')) + '/' + id\n\t\t);\n\t}\n\tgetQuestionsByQuiz(id: number) {\n\t\treturn this.http.get(this.rootURL + 'Quiz/QuizQuestion/' + id);\n\t}\n\tgetQuizQuestions(qid: number) {\n\t\treturn this.http.get(this.rootURL + 'Quiz/GetQuestionsNotInQuiz/' + qid);\n\t}\n\n\tgetUserDetails() {\n\t\tconsole.log(localStorage.getItem('email'));\n\t\treturn this.http.get(this.rootURL + 'GetUserDetails?email=' + localStorage.getItem('email'));\n\t}\n\n\tgetUserProgress() {\n\t\tconsole.log(localStorage.getItem('uid'));\n\t\treturn this.http.get(this.rootURL + 'Stats/' + localStorage.getItem('uid'));\n\t}\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQtY3JlYXRvci90YWcvY3JlYXRldGFnL2NyZWF0ZXRhZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n  <div class=\\\"card\\\" style=\\\"width: 80%;\\\">\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">{{Option}} Tag</h5>\\n      <form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\" autocomplete=\\\"off\\\">\\n        <input type=\\\"hidden\\\" name=\\\"CreatedBy\\\" #CreatedBy=\\\"ngModel\\\" [(ngModel)]=\\\"userId\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <input type=\\\"hidden\\\" name=\\\"SubjectId\\\" #SubjectId=\\\"ngModel\\\" [(ngModel)]=\\\"service.tagForm.SubjectId\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label>Name</label>\\n                <input required type=\\\"text\\\" name=\\\"Name\\\" #Name=\\\"ngModel\\\" [(ngModel)]=\\\"service.tagForm.Name\\\"\\n                  class=\\\"form-control\\\">\\n                <div class=\\\"validation-error\\\" *ngIf=\\\"Name.invalid && Name.touched\\\">This field is required.</div>\\n            </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label>Department</label>\\n            <input required type=\\\"text\\\" name=\\\"Department\\\" #Department=\\\"ngModel\\\" [(ngModel)]=\\\"service.tagForm.Department\\\"\\n              class=\\\"form-control\\\">\\n            <div class=\\\"validation-error\\\" *ngIf=\\\"Department.invalid && Department.touched\\\">This field is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button style=\\\"margin:0 5%\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-danger\\\" [mat-dialog-close]> Close</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { ContentCreatorServiceService } from '../../shared/content-creator-service.service';\nimport { TagModel } from '../../shared/tags.model';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n@Component({\n\tselector: 'app-createtag',\n\ttemplateUrl: './createtag.component.html',\n\tstyleUrls: ['./createtag.component.css']\n})\nexport class CreatetagComponent implements OnInit {\n\tpublic model: TagModel;\n\tuserId = \"\";\n\tOption: string = '';\n\tconstructor(\n\t\t@Inject(MAT_DIALOG_DATA) public data,\n\t\tpublic dialogRef: MatDialogRef<CreatetagComponent>,\n\t\tprivate service: ContentCreatorServiceService,\n\t\tprivate toastr: ToastrService) { }\n\n\tngOnInit() {\n\t\t// console.log(this.service.tagForm);\n\t\tthis.userId = localStorage.getItem('uid');\n\t\tif (this.data === null) {\n\t\t\t// console.log(this.service.tagForm);\n\t\t\tthis.Option = 'Create';\n\t\t\tthis.resetForm();\n\t\t}\n\t\telse {\n\t\t\t// console.log(this.service.tagForm);\n\t\t\tthis.Option = 'Update';\n\t\t\tthis.service.tagForm = this.data;\n\t\t\tconsole.log(this.service.tagForm);\n\t\t}\n\t}\n\tresetForm(form?: NgForm) {\n\t\tif (form != null) {\n\t\t\tform.resetForm();\n\t\t}\n\n\t\tthis.service.tagForm = {\n\t\t\tSubjectId: null,\n\t\t\tName: '',\n\t\t\tDepartment: ''\n\t\t};\n\t}\n\tonSubmit(form: NgForm) {\n\t\tthis.service.postTags(form.value).subscribe(res => {\n\t\t\tthis.toastr.success('Inserted successfully');\n\t\t\tthis.resetForm(form);\n\t\t});;\n\t\t//this.dialogRef.close();\n\t}\n}\n","module.exports = \"table {\\n\\twidth: 100%;\\n\\tmargin-top: 10px;\\n\\tcolor: black;\\n}\\n.container-fluid {\\n\\tmargin: 7px auto;\\n\\tpadding: 5px auto;\\n}\\nh4 {\\n\\ttext-align: center;\\n\\tcolor: black;\\n}\\n.th .mat-header-cell {\\n\\tpadding-left: 20px !important;\\n\\tcolor: black;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC1jcmVhdG9yL3RhZy9yZXRyaWV2ZXRhZy90YWcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLFdBQVc7Q0FDWCxnQkFBZ0I7Q0FDaEIsWUFBWTtBQUNiO0FBQ0E7Q0FDQyxnQkFBZ0I7Q0FDaEIsaUJBQWlCO0FBQ2xCO0FBQ0E7Q0FDQyxrQkFBa0I7Q0FDbEIsWUFBWTtBQUNiO0FBQ0E7Q0FDQyw2QkFBNkI7Q0FDN0IsWUFBWTtBQUNiIiwiZmlsZSI6InNyYy9hcHAvY29udGVudC1jcmVhdG9yL3RhZy9yZXRyaWV2ZXRhZy90YWcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcblx0d2lkdGg6IDEwMCU7XG5cdG1hcmdpbi10b3A6IDEwcHg7XG5cdGNvbG9yOiBibGFjaztcbn1cbi5jb250YWluZXItZmx1aWQge1xuXHRtYXJnaW46IDdweCBhdXRvO1xuXHRwYWRkaW5nOiA1cHggYXV0bztcbn1cbmg0IHtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRjb2xvcjogYmxhY2s7XG59XG4udGggLm1hdC1oZWFkZXItY2VsbCB7XG5cdHBhZGRpbmctbGVmdDogMjBweCAhaW1wb3J0YW50O1xuXHRjb2xvcjogYmxhY2s7XG59XG4iXX0= */\"","module.exports = \"<app-main-nav>\\n  <div>\\n    <button mat-raised-button (click)=\\\"onCreate()\\\">\\n      <mat-icon>add</mat-icon>Create\\n    </button>\\n  </div>\\n  <table class=\\\"table table-bordered table-striped\\\">\\n    <thead class=\\\"thead-dark\\\">\\n      <th scope=\\\"col\\\">#Subject ID</th>\\n      <th scope=\\\"col\\\">Subject</th>\\n      <th scope=\\\"col\\\">Department</th>\\n      <th scope=\\\"col\\\">Action</th>\\n  \\n    </thead>\\n  \\n    <tbody>\\n      <ng-container *ngFor=\\\"let tag of tagList;index as i;\\\">\\n        <tr>\\n          <th scope=\\\"row\\\">{{i+1}}</th>\\n          <td scope=\\\"row\\\">{{tag.Name}}</td>\\n          <td scope=\\\"row\\\">{{tag.Department}}</td>\\n          <td>\\n            <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"onEdit(i+1)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n          </td>\\n  \\n        </tr>\\n      </ng-container>\\n    </tbody>\\n  </table>\\n</app-main-nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TagModel } from '../../shared/tags.model';\nimport { ContentCreatorServiceService } from '../../shared/content-creator-service.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { ToastrService } from 'ngx-toastr';\nimport { CreatetagComponent } from '../createtag/createtag.component';\n\n@Component({\n\tselector: 'app-tag',\n\ttemplateUrl: './tag.component.html',\n\tstyleUrls: ['./tag.component.css']\n})\nexport class TagComponent implements OnInit {\n\ttagList: TagModel[];\n\tconstructor(private service: ContentCreatorServiceService,\n\t\tprivate router: Router,\n\t\tprivate dialog: MatDialog,\n\t\tprivate toastr: ToastrService) { }\n\n\tngOnInit() {\n\t\tthis.loadTags();\n\t}\n\tloadTags() {\n\t\tthis.service.getTags().subscribe((res: any) => {\n\t\t\tconsole.log(res);\n\t\t\tthis.tagList = res as TagModel[];\n\t\t});\n\t}\n\tonCreate() {\n\t\tconst dialogConfig = new MatDialogConfig();\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"70%\";\n\t\tdialogConfig.disableClose = true;\n\t\tlet dialogRef = this.dialog.open(CreatetagComponent, dialogConfig);\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tthis.loadTags();\n\t\t});\n\t}\n\t// onDelete(id: number) {\n\t// \tconsole.log(id);\n\t// \tif (confirm('Are you sure you want to delete this record')) {\n\t// \t\tthis.service.deleteTags(id).subscribe((res: any) => {\n\t// \t\t\tthis.loadTags();\n\t// \t\t\tthis.toastr.success('Deleted Successfully', 'Assesment System');\n\t// \t\t});\n\t// \t}\n\t// }\n\tonEdit(id: number) {\n\t\t// console.log(id);\n\t\tconst dialogConfig = new MatDialogConfig();\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"70%\";\n\t\tdialogConfig.disableClose = true;\n\t\tdialogConfig.data = this.tagList[id - 1];\n\t\tconsole.log(dialogConfig.data);\n\t\tlet dialogRef = this.dialog.open(CreatetagComponent, dialogConfig).afterClosed().subscribe(res => {\n\t\t\tthis.loadTags();\n\t\t});\n\t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQtY3JlYXRvci91cGRhdGUtcXVlc3Rpb24vdXBkYXRlLXF1ZXN0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card\\\" style=\\\"width: 80%;\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">{{label}}</h5>\\n    <form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\" autocomplete=\\\"off\\\">\\n      <input type=\\\"hidden\\\" name=\\\"CreatedBy\\\" #CreatedBy=\\\"ngModel\\\" [(ngModel)]=\\\"CCreatedBy\\\">\\n      <input type=\\\"hidden\\\" name=\\\"QuestionId\\\" #QuestionId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.QuestionId\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Question</label>\\n        <textarea class=\\\"form-control\\\" [readonly]=\\\"bool\\\" name=\\\"QuestionStatement\\\" #QuestionStatement=\\\"ngModel\\\"\\n          [(ngModel)]=\\\"service.formData.QuestionStatement\\\" rows=\\\"3\\\"></textarea>\\n        <div class=\\\"validation-error\\\" *ngIf=\\\"QuestionStatement.invalid && QuestionStatement.touched\\\">This field is\\n          required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Option 1</label>\\n          <input required type=\\\"text\\\" [readonly]=\\\"bool\\\" name=\\\"Option1\\\" #Option1=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option1\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Option1.invalid && Option1.touched\\\">This field is required.</div>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Option 2</label>\\n          <input required type=\\\"text\\\" [readonly]=\\\"bool\\\" name=\\\"Option2\\\" #Option2=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option2\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Option2.invalid && Option2.touched\\\">This field is required.</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Option 3</label>\\n          <input required type=\\\"text\\\" [readonly]=\\\"bool\\\" name=\\\"Option3\\\" #Option3=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option3\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Option3.invalid && Option3.touched\\\">This field is required.</div>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Option 4</label>\\n          <input required type=\\\"text\\\" [readonly]=\\\"bool\\\" name=\\\"Option4\\\" #Option4=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Option4\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Option4.invalid && Option4.touched\\\">This field is required.</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Correct Option</label>\\n          <input required type=\\\"text\\\" [readonly]=\\\"bool\\\" name=\\\"Answer\\\" #Answer=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Answer\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Answer.invalid && Answer.touched\\\">This field is required.\\n          </div>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Marks</label>\\n          <input required type=\\\"text\\\" [readonly]=\\\"bool\\\" name=\\\"Marks\\\" #Marks=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Marks\\\"\\n            class=\\\"form-control\\\">\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Marks.invalid && Marks.touched\\\">This field is required.</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Select Subject</label>\\n          <select name=\\\"SubjectId\\\" [disabled]=\\\"bool\\\" required #SubjectId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.SubjectId\\\"\\n            class=\\\"form-control\\\">\\n            <option value=\\\"\\\">Choose</option>\\n            <option *ngFor=\\\"let Subject of Subjects\\\" value=\\\"{{Subject.SubjectId}}\\\">{{Subject.Name}}</option>\\n          </select>\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"SubjectId.invalid && SubjectId.touched\\\">This field is required.</div>\\n        </div>\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label>Select Difficulty-Level</label>\\n          <select name=\\\"Difficulty\\\" [disabled]=\\\"bool\\\" required #Difficulty=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.Difficulty\\\"\\n            class=\\\"form-control\\\">\\n            <option value=\\\"\\\">Choose</option>\\n            <option value=\\\"Beginner\\\">Easy</option>\\n            <option value=\\\"Intermediate\\\">Medium</option>\\n            <option value=\\\"Advanced\\\">Hard</option>\\n          </select>\\n          <div class=\\\"validation-error\\\" *ngIf=\\\"Difficulty.invalid && Difficulty.touched\\\">This field is required.</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button style=\\\"margin:0 5%\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-danger\\\" [mat-dialog-close]> Close</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ContentCreatorServiceService } from '../shared/content-creator-service.service'\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from '../shared/subject.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-update-question',\n  templateUrl: './update-question.component.html',\n  styleUrls: ['./update-question.component.css']\n})\nexport class UpdateQuestionComponent implements OnInit {\n  public Subjects: Subject[];\n  public CCreatedBy = '';\n  bool = false;\n  label: string;\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef: MatDialogRef<UpdateQuestionComponent>,\n    public service: ContentCreatorServiceService,\n    public toastr: ToastrService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.bool = this.service.readonlyStatus;\n    if (this.bool === true) {\n      this.label = \"View Question\";\n    } else {\n      this.label = \"Edit Questions\";\n    }\n    this.CCreatedBy = localStorage.getItem('uid');\n    this.service.retrieveSubjects().subscribe(res => {\n      this.Subjects = res as Subject[];\n    });\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n    this.service.formData = {\n      QuestionId: null,\n      QuestionStatement: \"\",\n      Option1: \"\",\n      Option2: \"\",\n      Option3: \"\",\n      Option4: \"\",\n      Answer: null,\n      Marks: null,\n      Difficulty: \"\",\n      SubjectId: \"\",\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    this.service.updateQuestion(form.value).subscribe(res => {\n      this.toastr.success('Updated successfully');\n      this.resetForm(form);\n      // this.router.navigate(['/cc-dash'])\n    });;\n  }\n\n}\n","module.exports = \"/* .card {\\n\\tmargin: 9px auto;\\n}\\n.form-control{\\n\\tbackground-color: inherit;\\n} */\\n.card-header {\\n\\tfont-size: 30px;\\n\\tbackground-image: linear-gradient(to right, black, rgba(255, 0, 242, 0.719));\\n}\\n.parent {\\n\\tposition: relative;\\n}\\n.child1 {\\n\\tposition: absolute;\\n\\tmargin-top: 5px;\\n\\tmargin-bottom: 5px;\\n\\tmargin-left: 8px;\\n}\\n.child2 {\\n\\tposition: absolute;\\n\\tmargin-top: 5px;\\n\\tmargin-bottom: 5px;\\n\\tmargin-left: 143px;\\n}\\n.child3 {\\n\\tposition: absolute;\\n\\tmargin-top: 300px;\\n\\tmargin-left: 150px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC1jcmVhdG9yL3VzZXItZGV0YWlscy91c2VyLWRldGFpbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7R0FLRztBQUNIO0NBQ0MsZUFBZTtDQUNmLDRFQUE0RTtBQUM3RTtBQUNBO0NBQ0Msa0JBQWtCO0FBQ25CO0FBQ0E7Q0FDQyxrQkFBa0I7Q0FDbEIsZUFBZTtDQUNmLGtCQUFrQjtDQUNsQixnQkFBZ0I7QUFDakI7QUFDQTtDQUNDLGtCQUFrQjtDQUNsQixlQUFlO0NBQ2Ysa0JBQWtCO0NBQ2xCLGtCQUFrQjtBQUNuQjtBQUNBO0NBQ0Msa0JBQWtCO0NBQ2xCLGlCQUFpQjtDQUNqQixrQkFBa0I7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9jb250ZW50LWNyZWF0b3IvdXNlci1kZXRhaWxzL3VzZXItZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogLmNhcmQge1xuXHRtYXJnaW46IDlweCBhdXRvO1xufVxuLmZvcm0tY29udHJvbHtcblx0YmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbn0gKi9cbi5jYXJkLWhlYWRlciB7XG5cdGZvbnQtc2l6ZTogMzBweDtcblx0YmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCBibGFjaywgcmdiYSgyNTUsIDAsIDI0MiwgMC43MTkpKTtcbn1cbi5wYXJlbnQge1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uY2hpbGQxIHtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRtYXJnaW4tdG9wOiA1cHg7XG5cdG1hcmdpbi1ib3R0b206IDVweDtcblx0bWFyZ2luLWxlZnQ6IDhweDtcbn1cbi5jaGlsZDIge1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdG1hcmdpbi10b3A6IDVweDtcblx0bWFyZ2luLWJvdHRvbTogNXB4O1xuXHRtYXJnaW4tbGVmdDogMTQzcHg7XG59XG4uY2hpbGQzIHtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRtYXJnaW4tdG9wOiAzMDBweDtcblx0bWFyZ2luLWxlZnQ6IDE1MHB4O1xufVxuIl19 */\"","module.exports = \"<app-main-nav>\\n<div class=\\\"container parent\\\">\\n  <div class=\\\"child1\\\">\\n    <img class=\\\"card-img\\\" src=\\\"\\\" alt=\\\"Profile image\\\">\\n  </div>\\n  <div class=\\\"child2\\\">\\n    <div class=\\\"card text-white bg-dark\\\">\\n      <div class=\\\"card-header\\\">Profile</div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <label>Firstname: {{Firstname}}</label>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <label>Lastname: {{Lastname}}</label>\\n          </div>\\n          <div class=\\\"col-md-12\\\">\\n            <label>Email: {{email}}</label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"child3\\\">\\n      <div class=\\\"card-deck\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">Quizzes Created</h5>\\n              <label>{{Quizzes}}</label>\\n            </div>\\n          </div>\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">Questions Created</h5>\\n              <label>{{Questions}}</label>\\n            </div>\\n          </div>\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">Tags Created</h5>\\n              <label>{{Tags}}</label>\\n            </div>\\n          </div>\\n        </div>\\n  </div>\\n</div>\\n</app-main-nav>\"","import { Component, OnInit } from '@angular/core';\nimport { ContentCreatorServiceService } from '../shared/content-creator-service.service';\nimport { Question } from '../shared/question.model';\n\n@Component({\n\tselector: 'app-user-details',\n\ttemplateUrl: './user-details.component.html',\n\tstyleUrls: [ './user-details.component.css' ]\n})\nexport class UserDetailsComponent implements OnInit {\n\tFirstname: String;\n\tLastname: String;\n\temail: String;\n\tQuizzes: any;\n\tQuestions: any;\n\tTags: any;\n\tconstructor(private service: ContentCreatorServiceService) {}\n\n\tngOnInit() {\n\t\tthis.loadUserDetails();\n\t\tthis.loadUserProgress();\n\t}\n\n\tloadUserDetails() {\n\t\tthis.service.getUserDetails().subscribe((res: any) => {\n\t\t\t// console.log(res);\n\t\t\tthis.Firstname = res.FirstName;\n\t\t\tthis.Lastname = res.LastName;\n\t\t\tthis.email = res.Email;\n\t\t});\n\t}\n\n\tloadUserProgress() {\n\t\tthis.service.getUserProgress().subscribe((res: any) => {\n\t\t\tconsole.log(res);\n\t\t\tthis.Quizzes = res[0];\n\t\t\tthis.Questions = res[1];\n\t\t\tthis.Tags = res[2];\n\t\t\t// console.log(this.Questions);\n\t\t});\n\t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router,\n    private http: HttpClient) { }\n  rooturl = environment.apiURl;\n  role = \"\";\n  uid = \"\";\n  ngOnInit() {\n    if (localStorage.getItem('id') != null) {\n      const body = {\n        FirstName: localStorage.getItem('firstname'),\n        LastName: localStorage.getItem('lastname'),\n        Email: localStorage.getItem('email'),\n        ImgURL: localStorage.getItem('imgurl'),\n        GoogleId: localStorage.getItem('id')\n      };\n      // console.log(body);\n      this.http.post(this.rooturl + 'User/Register', body).subscribe((res: any) => {\n        // console.log(res);\n        this.http.get(this.rooturl + 'GetUserDetails?email=' + localStorage.getItem('email')).subscribe((res1: any) => {\n          console.log(res1);\n          this.uid = res1.Id;\n          this.role = res1.Roles[0].RoleId;\n          console.log(this.uid);\n          console.log(this.role);\n          localStorage.setItem('uid', this.uid);\n          localStorage.setItem('role', this.role);\n          this.redirecttodash(this.role);\n        })\n        // this.role = res.role;\n        // this.uid = res.Id\n        // localStorage.setItem('userId', this.uid);\n        // localStorage.setItem('role', this.role);\n        // this.redirecttodash(this.role);\n      });\n\n\n    } else {\n      console.log(\"sigin first\");\n      this.router.navigate(['/login']);\n    }\n  }\n  redirecttodash(role: string) {\n    if (this.role === '2') {\n      console.log('i am content creator');\n      this.router.navigate(['/cc-dash']);\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card-block\\\">\\n  <button class=\\\"btn btn-success\\\" (click)=\\\"signInWithGoogle()\\\"><span\\n      class=\\\"fa fa-google\\\"></span></button>\\n</div>\\n<div class=\\\"card-block\\\" *ngIf=\\\"user\\\">\\n  <button class=\\\"btn btn-danger\\\" (click)=\\\"signOut()\\\">Sign out</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'angularx-social-login';\nimport { SocialUser } from 'angularx-social-login';\nimport { GoogleLoginProvider } from 'angularx-social-login';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user: SocialUser;\n  constructor(private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.authService.authState.subscribe((user) => {\n      this.user = user;\n      if (user != null) {\n        console.log(this.user);\n        localStorage.setItem('token', this.user.idToken);\n        localStorage.setItem('email', this.user.email);\n        localStorage.setItem('firstname', this.user.firstName);\n        localStorage.setItem('lastname', this.user.lastName);\n        localStorage.setItem('id', this.user.id);\n        localStorage.setItem('imgurl', this.user.photoUrl);\n        localStorage.setItem('provider', this.user.provider);\n        this.router.navigate(['/home']);\n      } else {\n        localStorage.clear();\n        console.log('not signed in');\n      }\n    });\n  }\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n  signOut(): void {\n    this.authService.signOut();\n  }\n}","module.exports = \".sidenav-container {\\n\\theight: 100%;\\n}\\n.sidenav-container a {\\n\\tcolor: white;\\n}\\n/* .sidenav-container a:focus {\\n\\tbackground-color: green !important;\\n}\\n.sidenav-container a:active {\\n\\tbackground-color: green !important;\\n} */\\n.sidenav-container a:hover,\\n.sidenav-container a:focus {\\n\\tbackground-color: red !important;\\n}\\n/* a:focus {\\n\\tbackground-color: red !important;\\n} */\\n.sidenav {\\n\\twidth: 250px;\\n\\tbackground-color: #021521;\\n}\\n.sidenav .mat-toolbar {\\n\\tbackground: inherit;\\n}\\n.mat-toolbar {\\n\\tbackground-color: #021521;\\n\\ttext-decoration: none;\\n\\tborder-bottom: .2px solid #030e13;\\n}\\n.mat-toolbar span {\\n\\tcolor: white;\\n}\\n.mat-list-item {\\n\\tmargin-top: 10px;\\n}\\n.log {\\n\\tfont-size: 15px;\\n\\tcursor: pointer;\\n\\tcolor: red !important;\\n}\\n.mat-toolbar.mat-primary {\\n\\tposition: -webkit-sticky;\\n\\tposition: sticky;\\n\\ttop: 0;\\n\\tz-index: 1;\\n}\\n.content {\\n\\tpadding: 30px 30px 0px 50px !important;\\n\\tmargin: 30px auto;\\n}\\n.mat-icon {\\n\\tcolor: white;\\n}\\n.spacer {\\n\\tflex: 1 1 auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdC1hZG1pbi9tYWluLW5hdjIvbWFpbi1uYXYyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxZQUFZO0FBQ2I7QUFDQTtDQUNDLFlBQVk7QUFDYjtBQUNBOzs7OztHQUtHO0FBQ0g7O0NBRUMsZ0NBQWdDO0FBQ2pDO0FBQ0E7O0dBRUc7QUFFSDtDQUNDLFlBQVk7Q0FDWix5QkFBeUI7QUFDMUI7QUFFQTtDQUNDLG1CQUFtQjtBQUNwQjtBQUNBO0NBQ0MseUJBQXlCO0NBQ3pCLHFCQUFxQjtDQUNyQixpQ0FBaUM7QUFDbEM7QUFDQTtDQUNDLFlBQVk7QUFDYjtBQUNBO0NBQ0MsZ0JBQWdCO0FBQ2pCO0FBQ0E7Q0FDQyxlQUFlO0NBQ2YsZUFBZTtDQUNmLHFCQUFxQjtBQUN0QjtBQUNBO0NBQ0Msd0JBQWdCO0NBQWhCLGdCQUFnQjtDQUNoQixNQUFNO0NBQ04sVUFBVTtBQUNYO0FBQ0E7Q0FDQyxzQ0FBc0M7Q0FDdEMsaUJBQWlCO0FBQ2xCO0FBQ0E7Q0FDQyxZQUFZO0FBQ2I7QUFDQTtDQUNDLGNBQWM7QUFDZiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QtYWRtaW4vbWFpbi1uYXYyL21haW4tbmF2Mi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcblx0aGVpZ2h0OiAxMDAlO1xufVxuLnNpZGVuYXYtY29udGFpbmVyIGEge1xuXHRjb2xvcjogd2hpdGU7XG59XG4vKiAuc2lkZW5hdi1jb250YWluZXIgYTpmb2N1cyB7XG5cdGJhY2tncm91bmQtY29sb3I6IGdyZWVuICFpbXBvcnRhbnQ7XG59XG4uc2lkZW5hdi1jb250YWluZXIgYTphY3RpdmUge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbiAhaW1wb3J0YW50O1xufSAqL1xuLnNpZGVuYXYtY29udGFpbmVyIGE6aG92ZXIsXG4uc2lkZW5hdi1jb250YWluZXIgYTpmb2N1cyB7XG5cdGJhY2tncm91bmQtY29sb3I6IHJlZCAhaW1wb3J0YW50O1xufVxuLyogYTpmb2N1cyB7XG5cdGJhY2tncm91bmQtY29sb3I6IHJlZCAhaW1wb3J0YW50O1xufSAqL1xuXG4uc2lkZW5hdiB7XG5cdHdpZHRoOiAyNTBweDtcblx0YmFja2dyb3VuZC1jb2xvcjogIzAyMTUyMTtcbn1cblxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcblx0YmFja2dyb3VuZDogaW5oZXJpdDtcbn1cbi5tYXQtdG9vbGJhciB7XG5cdGJhY2tncm91bmQtY29sb3I6ICMwMjE1MjE7XG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0Ym9yZGVyLWJvdHRvbTogLjJweCBzb2xpZCAjMDMwZTEzO1xufVxuLm1hdC10b29sYmFyIHNwYW4ge1xuXHRjb2xvcjogd2hpdGU7XG59XG4ubWF0LWxpc3QtaXRlbSB7XG5cdG1hcmdpbi10b3A6IDEwcHg7XG59XG4ubG9nIHtcblx0Zm9udC1zaXplOiAxNXB4O1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGNvbG9yOiByZWQgIWltcG9ydGFudDtcbn1cbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSB7XG5cdHBvc2l0aW9uOiBzdGlja3k7XG5cdHRvcDogMDtcblx0ei1pbmRleDogMTtcbn1cbi5jb250ZW50IHtcblx0cGFkZGluZzogMzBweCAzMHB4IDBweCA1MHB4ICFpbXBvcnRhbnQ7XG5cdG1hcmdpbjogMzBweCBhdXRvO1xufVxuLm1hdC1pY29uIHtcblx0Y29sb3I6IHdoaXRlO1xufVxuLnNwYWNlciB7XG5cdGZsZXg6IDEgMSBhdXRvO1xufVxuIl19 */\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\"\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar><a mat-list-item routerLink=\\\"/ta-dash\\\">Dashboard</a></mat-toolbar>\\n    <mat-nav-list>\\n      <!-- <a mat-list-item routerLink=\\\"/retrieve-schedule\\\">Test-admin</a> -->\\n      <a mat-list-item routerLink=\\\"/retrieve-schedule\\\">Create/Retrieve Schedule</a>\\n      <!-- <a mat-list-item routerLink=\\\"/tag\\\">Create / Edit Tag</a>\\n      <a mat-list-item routerLink=\\\"/rqbank\\\">Questions Created</a>\\n      <a mat-list-item routerLink=\\\"#\\\">Archive Quizes</a> -->\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar>\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Test Admin</span>\\n      <span class=\\\"spacer\\\"></span>\\n      <a class= \\\"log\\\" (click)=\\\"logout()\\\" >Log Out</a>\\n    </mat-toolbar>\\n    <div class=\\\"content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from 'angularx-social-login';\nimport { Router } from '@angular/router'\n\n@Component({\n\tselector: 'app-main-nav2',\n\ttemplateUrl: './main-nav2.component.html',\n\tstyleUrls: ['./main-nav2.component.css']\n})\nexport class MainNav2Component {\n\tisHandset$: Observable<boolean> = this.breakpointObserver\n\t\t.observe(Breakpoints.Handset)\n\t\t.pipe(map((result) => result.matches));\n\n\tconstructor(private breakpointObserver: BreakpointObserver, private authService: AuthService,\n\t\tprivate router: Router) { }\n\tngOnInit() {\n\t\tthis.authService.authState.subscribe((user) => {\n\t\t\tif (user != null) {\n\t\t\t\t//\tconsole.log(user);\n\t\t\t} else {\n\t\t\t\tlocalStorage.clear();\n\t\t\t\tthis.router.navigate(['/login']);\n\t\t\t}\n\t\t});\n\t}\n\tlogout() {\n\t\tthis.authService.signOut();\n\t}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QtYWRtaW4vcmV0cmlldmUtc2NoZWR1bGUvYWRkLXVzZXIvYWRkLXVzZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"    <form #Userform=\\\"ngForm\\\" (submit)=\\\"onSubmit(Userform)\\\" autocomplete=\\\"off\\\">\\n        <div *ngFor=\\\"let x of quiztakers; let i = index\\\"><br>\\n          <input [id]=\\\"'quiztakers-'+i\\\" type=\\\"checkbox\\\" value=\\\"{{x.Id}}\\\" [checked]=\\\"x.selected\\\"\\n            (change)=\\\"updateSelectedUsers(i)\\\">\\n          <label>{{x.FirstName  }}{{x.LastName}}</label>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        <button type=\\\"button\\\" [mat-dialog-close] class=\\\"btn btn-danger\\\">Close</button>\\n      </form>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { TestAdminService } from '../../shared/test-admin.service';\nimport { User } from 'src/app/test-admin/shared/user.model'\nimport { NgForm } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\n  public dialogRef: MatDialogRef<AddUserComponent>,\n  public toastr: ToastrService,\n  public dialog: MatDialog,\n  private service: TestAdminService) { }\n\n  quiztakers: any[];\n\n  ngOnInit() {\n    // if(Number(localStorage.getItem('sid')) !=null)  {\n    //   this.loadSpecificUsers(this.data);\n    //   }\n      //else{\n    this.loadUsers();\n    //  }\n  }\n\n  loadUsers() {\n    this.service.retrieveAllEmployees().subscribe((res: any) => {\n      res.forEach(obj => obj.selected = false);\n      this.quiztakers = res as User[];\n    })\n  }\n  loadSpecificUsers(id:number) {\n    this.service.retrieveSpecificEmployees(id).subscribe((res:any)=> {\n      res.forEach(obj => obj.selected = false);\n      this.quiztakers = res as User[];\n    })\n  }\n  updateSelectedUsers(index) {\n    this.quiztakers[index].selected = !this.quiztakers[index].selected;\n  }\n  onSubmit(form: NgForm) {\n    var quiztakerId = this.quiztakers.filter(Id => Id.selected).map(idSelected => idSelected.Id);\n    console.log(quiztakerId);\n    this.service.quiztakerId = quiztakerId;\n  }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QtYWRtaW4vcmV0cmlldmUtc2NoZWR1bGUvY3JlYXRlLXNjaGVkdWxlL2NyZWF0ZS1zY2hlZHVsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-main-nav2>\\n    <div class=\\\"card\\\" style=\\\"width: 80%;\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Create Schedule</h5>\\n          <button type=\\\"button\\\" (click)=\\\"adduser()\\\" class=\\\"btn btn-primary\\\">Add Users</button><br />\\n          <form #form=\\\"ngForm\\\" (submit)=\\\"sub(form)\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"form-row\\\">\\n              <input type=\\\"hidden\\\" #CreatedBy=\\\"ngModel\\\" name=\\\"CreatedBy\\\" [(ngModel)]=\\\"CCreatedBy\\\">\\n              <div class=\\\"form-group col-md-6\\\">\\n                <label>Start Date Time</label>\\n                <input type=\\\"datetime-local\\\" required name=\\\"StartDateTime\\\" #StartDateTime=\\\"ngModel\\\" [(ngModel)]=\\\"q1\\\">\\n                <div class=\\\"validation-error\\\" *ngIf=\\\"StartDateTime.invalid && StartDateTime.touched\\\">This field is\\n                  required.\\n                </div>\\n              </div>\\n              <div class=\\\"form-group col-md-6\\\">\\n                <label>End Date Time</label>\\n                <input type=\\\"datetime-local\\\" required name=\\\"EndDateTime\\\" #EndDateTime=\\\"ngModel\\\" [(ngModel)]=\\\"q2\\\">\\n                <div class=\\\"validation-error\\\" *ngIf=\\\"EndDateTime.invalid && EndDateTime.touched\\\">This field is\\n                  required.\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-6\\\">\\n                <label>Select Quiz</label>\\n                <select name=\\\"QuizId\\\" required #QuizId=\\\"ngModel\\\" [(ngModel)]=\\\"q3\\\" class=\\\"form-control\\\">\\n                  <option value=\\\"\\\">Choose</option>\\n                  <option *ngFor=\\\"let Quiz of QuizList\\\" value=\\\"{{Quiz.QuizId}}\\\">\\n                    {{Quiz.Subject}}&nbsp;&nbsp;{{Quiz.Difficulty}}</option>\\n                </select>\\n                <div class=\\\"validation-error\\\" *ngIf=\\\"QuizId.invalid && QuizId.touched\\\">This field is required.</div>\\n              </div>\\n            </div>\\n      \\n      \\n            <div class=\\\"form-group\\\">\\n              <button type=\\\"submit\\\" [disabled]=\\\"btndisable || form.invalid\\\" class=\\\"btn btn-primary btn-block\\\">Submit</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n</app-main-nav2>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { TestAdminService } from '../../shared/test-admin.service';\nimport { QuizModel } from '../../../content-creator/shared/quiz.model';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { AddUserComponent } from 'src/app/test-admin/retrieve-schedule/add-user/add-user.component';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-create-schedule',\n  templateUrl: './create-schedule.component.html',\n  styleUrls: ['./create-schedule.component.css']\n})\nexport class CreateScheduleComponent implements OnInit {\n  q1 = \"\";\n  q2 = \"\";\n  q3 = \"\";\n  btndisable = true;\n  CCreatedBy = \"\";\n  constructor(private service: TestAdminService, \n    private dialog: MatDialog,\n    public toastr: ToastrService) { }\n  QuizList: QuizModel[];\n  ngOnInit() {\n    this.CCreatedBy = localStorage.getItem('uid');\n    this.service.retriveAllQuizzes().subscribe((res) => {\n      // console.log(res);\n      this.QuizList = res as QuizModel[];\n      console.log(this.QuizList);\n      this.q1 = \"\";\n      this.q2 = \"\";\n      this.q3 = \"\";\n    }\n    )\n  }\n  sub(form: NgForm) {\n    // console.log(form.value);\n    this.service.postSchedule(form.value).subscribe((res:any)=>{\n      console.log(res);\n    });\n    this.toastr.success('Inserted successfully');\n  }\n  adduser() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"70%\";\n    dialogConfig.disableClose = true;\n    let dialogRef = this.dialog.open(AddUserComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(result => {\n      //console.log(this.service.quiztakerId);\n      if (this.service.quiztakerId != null) {\n        this.btndisable = false;\n      }\n    });\n  }\n}\n","module.exports = \"th,td{\\n    color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdC1hZG1pbi9yZXRyaWV2ZS1zY2hlZHVsZS9yZXRyaWV2ZS1zY2hlZHVsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QtYWRtaW4vcmV0cmlldmUtc2NoZWR1bGUvcmV0cmlldmUtc2NoZWR1bGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRoLHRke1xuICAgIGNvbG9yOiBibGFjaztcbn0iXX0= */\"","module.exports = \"<app-main-nav2>\\n  <button type=\\\"button\\\" (click)=\\\"onCreate()\\\" class=\\\"btn btn-primary\\\">Create Schedule</button>\\n    <br /><br />\\n    <table class=\\\"table table-bordered table-striped\\\">\\n      <thead class=\\\"thead-dark\\\">\\n        <th scope=\\\"col\\\">#Schedule ID</th>\\n        <th scope=\\\"col\\\">Quiz Id</th>\\n        <th scope=\\\"col\\\">Start Date/Time</th>\\n        <th scope=\\\"col\\\">End Date/Time</th>\\n        <th scope=\\\"col\\\">Action</th>\\n    \\n      </thead>\\n    \\n      <tbody>\\n        <ng-container *ngFor=\\\"let item of scheduleList;index as i;\\\">\\n          <tr style=\\\"color:azure\\\">\\n            <th (click)=\\\"viewSchedule(item.QuizId,i+1)\\\" scope=\\\"row\\\">{{i+1}}</th>\\n            <td (click)=\\\"viewSchedule(item.QuizId,i+1)\\\" scope=\\\"row\\\">{{item.QuizId}}</td>\\n            <td (click)=\\\"viewSchedule(item.QuizId,i+1)\\\" scope=\\\"row\\\">{{item.StartDateTime}}</td>\\n            <td (click)=\\\"viewSchedule(item.QuizId,i+1)\\\" scope=\\\"row\\\">{{item.EndDateTime}}</td>\\n            <td>\\n              <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"editSchedule(item.QuizId,i+1)\\\"><i\\n                  class=\\\"fa fa-pencil\\\"></i></a>\\n              <a class=\\\"btn btn-sm btn-danger text-white ml-1\\\" (click)=\\\"deleteSchedule(ques.QuestionId)\\\"><i\\n                  class=\\\"fa fa-trash\\\"></i></a>\\n            </td>\\n    \\n          </tr>\\n        </ng-container>\\n      </tbody>\\n    </table>\\n    </app-main-nav2>\\n    \"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { ToastrService } from 'ngx-toastr';\nimport { TestAdminService } from '../shared/test-admin.service';\nimport { Schedule } from '../shared/schedule.model';\nimport { ViewScheduleComponent } from './view-schedule/view-schedule.component';\n@Component({\n\tselector: 'app-retrieve-schedule',\n\ttemplateUrl: './retrieve-schedule.component.html',\n\tstyleUrls: ['./retrieve-schedule.component.css']\n})\nexport class RetrieveScheduleComponent implements OnInit {\n\n\tonCreate() {\n\t\tthis.router.navigate(['/testAdminCreateScheDule']);\n\t}\n\tscheduleList: Schedule[];\n\tsearchText = '';\n\tdifficultyLevel = '';\n\n\tconstructor(private service: TestAdminService,\n\t\tprivate toastr: ToastrService,\n\t\tprivate dialog: MatDialog,\n\t\tprivate router: Router) { }\n\n\tngOnInit() {\n\t\tthis.service.getSchedule(localStorage.getItem('uid')).subscribe((res: any) => {\n\t\t\tthis.scheduleList = res as Schedule[];\n\t\t\tconsole.log(this.scheduleList);\n\t\t});\n\t}\n\tdeleteSchedule(qid) {\n\t\tthis.service.deleteSchedule(qid).subscribe((res: any) => {\n\t\t\tthis.toastr.success('Deleted Successfully', 'Assesment System');\n\t\t});\n\t}\n\tviewSchedule(scheduleid: number, arrayindex: number) {\n\t\tthis.service.getScheduleQuizUsers(scheduleid).subscribe((res: any) => {\n\t\t\tthis.service.scheduleQuizUsers = res;\n\t\t})\n\t\tconst dialogConfig = new MatDialogConfig();\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"70%\";\n\t\tdialogConfig.disableClose = true;\n\t\tthis.service.readonlyStatus = true;\n\t\tthis.service.formdata = this.scheduleList[arrayindex - 1];\n\t\tthis.dialog.open(ViewScheduleComponent, dialogConfig).afterClosed().subscribe((res: any) => {\n\t\t});\n\n\t}\n\teditSchedule(scheduleid: number, arrayindex: number) {\n\t\tconst dialogConfig = new MatDialogConfig();\n\t\tdialogConfig.autoFocus = true;\n\t\tdialogConfig.width = \"70%\";\n\t\tdialogConfig.disableClose = true;\n\t\tthis.service.readonlyStatus = false;\n\t\tthis.service.formdata = this.scheduleList[arrayindex - 1];\n\t\tlocalStorage.setItem('sId', scheduleid.toString());\n\t\tthis.dialog.open(ViewScheduleComponent, dialogConfig).afterClosed().subscribe((res: any) => {\n\t\t\tlocalStorage.removeItem('sId');\n\t\t});\n\n\t}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QtYWRtaW4vcmV0cmlldmUtc2NoZWR1bGUvdmlldy1zY2hlZHVsZS92aWV3LXNjaGVkdWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card\\\" style=\\\"width: 80%;\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">{{label}}</h5>\\n    <button type=\\\"button\\\" (click)=\\\"onAdd()\\\" class=\\\"btn btn-primary\\\">Add Question</button>\\n    <form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\" autocomplete=\\\"off\\\">\\n      <input type=\\\"hidden\\\" name=\\\"CreatedBy\\\" #CreatedBy=\\\"ngModel\\\" [(ngModel)]=\\\"this.CCreatedBy\\\">\\n      <input type=\\\"hidden\\\" name=\\\"QuizId\\\" #QuizId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.QuizId\\\">\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label>Start Date Time</label>\\n        <input type=\\\"datetime-local\\\" required name=\\\"StartDateTime\\\" #StartDateTime=\\\"ngModel\\\"\\n          [(ngModel)]=service.formdata.StartDateTime [readonly]=\\\"bool\\\">\\n        <div class=\\\"validation-error\\\" *ngIf=\\\"StartDateTime.invalid && StartDateTime.touched\\\">This field is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group col-md-6\\\">\\n        <label>End Date Time</label>\\n        <input type=\\\"datetime-local\\\" required name=\\\"EndDateTime\\\" #EndDateTime=\\\"ngModel\\\"\\n          [(ngModel)]=\\\"service.formdata.EndDateTime\\\" [readonly]=\\\"bool\\\">\\n        <div class=\\\"validation-error\\\" *ngIf=\\\"EndDateTime.invalid && EndDateTime.touched\\\">This field is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button style=\\\"margin:0 5%\\\" type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-danger\\\" [mat-dialog-close]> Close</button>\\n      </div>   \\n      <ng-container *ngFor=\\\"let item of scheduleList;index as i\\\">\\n        <p>{{i+1}}.&nbsp;&nbsp;item.name</p><br/>\\n      </ng-container>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { TestAdminService } from '../../shared/test-admin.service';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialogConfig, MatDialog } from '@angular/material';\nimport { UpdateQuestionComponent } from 'src/app/content-creator/update-question/update-question.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { Schedule } from '../../shared/schedule.model';\nimport { NgForm } from '@angular/forms';\nimport { AddUserComponent } from '../add-user/add-user.component';\n\n@Component({\n  selector: 'app-view-schedule',\n  templateUrl: './view-schedule.component.html',\n  styleUrls: ['./view-schedule.component.css']\n})\nexport class ViewScheduleComponent implements OnInit {\n  public Schedule: Schedule[];\n  public CCreatedBy = '';\n  bool: boolean;\n  label: string;\n  usersList : any[];\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef: MatDialogRef<UpdateQuestionComponent>,\n    public toastr: ToastrService,\n    private service: TestAdminService,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    console.log(this.service.formdata);\n    this.bool = this.service.readonlyStatus;\n    if (this.bool === true) {\n      this.label = \"View Schedule\";\n    } else {\n      this.label = \"Edit Schedule\";\n    }\n    this.CCreatedBy = localStorage.getItem('uid');\n    this.usersList = this.service.scheduleQuizUsers;\n  }\n  onAdd()  {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"70%\";\n    dialogConfig.disableClose = true;\n    let dialogRef = this.dialog.open(AddUserComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { QuizModel } from '../../content-creator/shared/quiz.model'\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/test-admin/shared/user.model'\nimport { Schedule } from 'src/app/test-admin/shared/schedule.model';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestAdminService {\n\n  constructor(private http: HttpClient) { }\n  rooturl = environment.apiURl;\n  quiz: QuizModel[];\n  quiztakerId: string[] = null;\n  formdata: Schedule;\n  readonlyStatus: boolean;\n  scheduleQuizUsers: string[];\n  retriveAllQuizzes() {\n    return this.http.get(this.rooturl + 'Quiz/GetAllQuiz');\n  }\n  retrieveAllEmployees() {\n    return this.http.get(this.rooturl + 'User/GetUserAll');\n  }\n  retrieveSpecificEmployees(sId) {\n    return this.http.get(this.rooturl + 'User/GetUserSpecific/' + sId);\n  }\n  postSchedule(formdata: Schedule) {\n    formdata.UserId = this.quiztakerId;\n    console.log(formdata);\n    return this.http.post(this.rooturl + 'QuizSchedule/ScheduleQuiz', formdata);\n  }\n  getSchedule(id: string) {\n    return this.http.get(this.rooturl + 'QuizSchedule/GetAllQuizSchedule/' + id);\n  }\n  getScheduleQuizUsers(id: number) {\n    return this.http.get(this.rooturl + 'QuizSchedule/GetUsersForSchedule/' + id);\n  }\n  deleteSchedule(id: string) {\n    return this.http.delete(this.rooturl + '/' + id);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QtYWRtaW4vdGVzdC1hZG1pbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  test-admin works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test-admin',\n  templateUrl: './test-admin.component.html',\n  styleUrls: ['./test-admin.component.css']\n})\nexport class TestAdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURl: 'http://62d591eb.ngrok.io/api/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}